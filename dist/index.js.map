{"version":3,"sources":["webpack://Faust2WebAudio/webpack/universalModuleDefinition","webpack://Faust2WebAudio/webpack/bootstrap","webpack://Faust2WebAudio/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Faust2WebAudio/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Faust2WebAudio/./node_modules/@babel/runtime/regenerator/index.js","webpack://Faust2WebAudio/./node_modules/crypto-libraries/sha1.js","webpack://Faust2WebAudio/./node_modules/regenerator-runtime/runtime.js","webpack://Faust2WebAudio/./src/Faust.ts","webpack://Faust2WebAudio/./src/FaustAudioWorkletNode.ts","webpack://Faust2WebAudio/./src/FaustAudioWorkletProcessor.ts","webpack://Faust2WebAudio/./src/FaustOfflineProcessor.ts","webpack://Faust2WebAudio/./src/FaustWasmToScriptProcessor.ts","webpack://Faust2WebAudio/./src/index.ts","webpack://Faust2WebAudio/./src/utils.ts","webpack://Faust2WebAudio/./src/wasm/mixer32.wasm"],"names":["Faust","constructor","debug","lib","libFaust","dspTable","workletProcessors","_log","offlineProcessor","FaustOfflineProcessor","wasmLocation","dataLocation","logHandler","getNode","code","optionsIn","audioCtx","voices","useWorklet","bufferSize","plotHandler","args","argv","utils","compileCodes","compiledDsp","options","getAudioWorkletNode","getScriptProcessorNode","inspect","plot","compileCode","factoryName","argvIn","internalMemory","argsStr","time1","performance","now","fact","createDSPFactory","time2","log","error","Error","module","wasm","getWasmModule","size","data","ui8Code","Uint8Array","i","get","helpersCode","helper","e","errorMsg","getErrorAfterException","cleanupAfterException","strArgv","join","shaKey","sha1","hash","msgFormat","version","effectCode","dspCompiledCode","effectCompiledCode","compiledCodes","dsp","effect","compileDsp","expandCode","expand","expandDSP","expandedCode","codes","WebAssembly","compile","dspModule","dspMeta","undefined","json","match","replace","meta","JSON","parse","message","effectModule","effectMeta","FaustWasmToScriptProcessor","compiledDspWithCodes","id","indexOf","strProcessor","toString","stringify","FaustAudioWorkletProcessorWrapper","url","window","URL","createObjectURL","Blob","type","audioWorklet","addModule","push","FaustAudioWorkletNode","mixer32Module","deleteDsp","deleteAllDSPFactories","stringifyDspTable","strTable","key","strCode","btoa","parseDspTable","str","strCodes","atob","then","getDiagram","aux","generateAuxFiles","FS","readFile","encoding","fs","console","msg","length","AudioWorkletNode","numberOfInputs","inputs","numberOfOutputs","outputs","channelCount","Math","max","outputChannelCount","channelCountMode","channelInterpretation","processorOptions","onprocessorerror","name","outputHandler","inputsItems","outputsItems","fPitchwheelLabel","fCtrlLabel","port","onmessage","path","value","index","events","Array","fill","map","parseUI","ui","parameters","forEach","p","automationRate","group","parseGroup","items","parseItems","item","parseItem","address","midi","strMidi","trim","min","matched","parseInt","keyOn","channel","pitch","velocity","postMessage","keyOff","allNotesOff","ctrlChange","ctrlIn","valueIn","ctrl","remap","param","setValueAtTime","context","currentTime","pitchWheel","wheel","pw","midiMessage","cmd","data1","data2","metadata","setParamValue","getParamValue","setOutputParamHandler","handler","getOutputParamHandler","getNumInputs","getNumOutputs","getParams","getJSON","o","r","label","getUI","destroy","close","FaustConst","faustData","FaustAudioWorkletProcessor","AudioWorkletProcessor","obj","callback","endsWith","defaultValue","init","minValue","maxValue","parseItem2","pathTable$","parameterDescriptors","params","destroyed","dspInstance","effectInstance","mixerInstance","memory","$ins","$outs","dspInChannnels","dspOutChannnels","numIn","numOut","ptrSize","sampleSize","outputsTimer","$audioHeap","$$audioHeapInputs","$$audioHeapOutputs","$audioHeapInputs","$audioHeapOutputs","$dsp","factory","HEAP","HEAP32","HEAPF32","$effect","$mixing","fFreqLabel$","fGateLabel$","fGainLabel$","fDate","$$audioHeapMixing","$audioHeapMixing","mixer","dspVoices$","dspVoicesState","dspVoicesLevel","dspVoicesDate","kActiveVoice","kFreeVoice","kReleaseVoice","kNoVoice","$buffer","cachedEvents","computeHandler","handleMessage","instantiateWasm","exports","buffer","Int32Array","Float32Array","setup","createWasmMemory","imports","createWasmImport","Instance","mixerImports","print","updateOutputs","val","findPath","$voice","dspInChans","subarray","dspOutChans","sampleRate","getPlayingVoice","voice","oldestDatePlaying","Number","MAX_VALUE","allocVoice","instanceClear","getFreeVoice","voiceRelease","voicePlaying","oldestDateRelease","$","midiToFreq","$gate","process","input","output","chan","dspInput","set","paramArray","clearOutput","compute","mixVoice","dspOutput","printMemory","registerProcessor","importObject","env","memoryBase","tableBase","_abs","abs","_acosf","acos","_asinf","asin","_atanf","atan","_atan2f","atan2","_ceilf","ceil","_cosf","cos","_expf","exp","_floorf","floor","_fmodf","x","y","_logf","_log10f","log10","_max_f","_min_f","_remainderf","round","_powf","pow","_roundf","fround","_sinf","sin","_sqrtf","sqrt","_tanf","tan","_acoshf","acosh","_asinhf","asinh","_atanhf","atanh","_coshf","cosh","_sinhf","sinh","_tanhf","tanh","_acos","_asin","_atan","_atan2","_ceil","_cos","_exp","_floor","_fmod","_log10","_max_","_min_","_remainder","_pow","_round","_sin","_sqrt","_tan","_acosh","_asinh","_atanh","_cosh","_sinh","_tanh","table","Table","initial","element","instantiate","plotted","computed","j","faust","initNode","node","createScriptProcessor","inputBuffer","getChannelData","outputBuffer","onaudioprocess","getSampleRate","instanceInit","instanceConstants","instanceResetUserInterface","declare","Object","keys","setComputeHandler","getComputeHandler","k","bufferSizeIn","mixerObject","ab2str","buf","String","fromCharCode","apply","str2ab","ArrayBuffer","bufView","strLen","charCodeAt","atoUint6","nChr","atoab","sBase64","nBlocksSize","sB64Enc","nInLen","nOutLen","taBytes","nMod3","nMod4","nUint24","nOutIdx","nInIdx","heap2Str","Module","mixer32DataURI","split","note","v","mn0","mx0","mn1","mx1","findPathClosure","voicesIn","pow2limit","n","effectSize","memorySize","Memory","maximum","args2String","argStr","arg","isArray","s","argsTbl2String","toArgv"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,mC;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,0EAAqB;;;;;;;;;;;;;ACA9C;AAAA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,+CAA+C;AAC/C,iBAAiB,OAAO;AACxB,mBAAmB;AACnB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA,mDAAmD;AACnD,yDAAyD,OAAO;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,yCAAyC;;AAEzC;AACA,mCAAmC;AACnC,kCAAkC;AAClC;;AAEA,qBAAqB,KAAK;AAC1B;AACA,yBAAyB,MAAM,OAAO;AACtC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA,yBAAyB,OAAO;AAChC,0BAA0B,MAAM;;AAEhC;AACA;;AAEA;AACA,yBAAyB,MAAM;AAC/B,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,YAAY;;AAEjC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,yDAAyD;AACzD;AACA;;AAEA,2CAA2C;AAC3C,gDAAgD;AAChD,+CAA+C,EAAE;AACjD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,wCAAwC;AACxC,uDAAuD;AACvD,wCAAwC;AACxC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;AC/JpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,SAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxtBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;;AAEA;;;;;;;AAOO,MAAMA,KAAN,CAAY;AACf;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;;AAOA;;;;;;;;AAQA;;;;;;;;AASA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;;;AASA;;;;;;;AAOAC,aAAW,CAACC,KAAD,EAAiBC,GAAjB,EAAgC;AAAA,SAtEnCC,QAsEmC;AAAA,SAlD3CF,KAkD2C,GAlD1B,KAkD0B;AAAA,SA1CnCG,QA0CmC,GA1CY,EA0CZ;AAAA,SAlCnCC,iBAkCmC,GAlCL,EAkCK;AAAA,SAjCnCC,IAiCmC,GAjClB,EAiCkB;AAAA,SAzBnCC,gBAyBmC,GAzBO,IAAIC,4EAAJ,EAyBP;AAAA,SAjBnCC,YAiBmC;AAAA,SATnC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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Faust2WebAudio\"] = factory();\n\telse\n\t\troot[\"Faust2WebAudio\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"regenerator-runtime\");\n","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n/* SHA-1 (FIPS 180-4) implementation in JavaScript                    (c) Chris Veness 2002-2019  */\n/*                                                                                   MIT Licence  */\n/* www.movable-type.co.uk/scripts/sha1.html                                                       */\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n\n/**\n * SHA-1 hash function reference implementation.\n *\n * This is an annotated direct implementation of FIPS 180-4, without any optimisations. It is\n * intended to aid understanding of the algorithm rather than for production use.\n *\n * While it could be used where performance is not critical, I would recommend using the ‘Web\n * Cryptography API’ (developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest) for the browser,\n * or the ‘crypto’ library (nodejs.org/api/crypto.html#crypto_class_hash) in Node.js.\n *\n * See csrc.nist.gov/groups/ST/toolkit/secure_hashing.html\n *     csrc.nist.gov/groups/ST/toolkit/examples.html\n */\nclass Sha1 {\n\n    /**\n     * Generates SHA-1 hash of string.\n     *\n     * @param   {string} msg - (Unicode) string to be hashed.\n     * @param   {Object} [options]\n     * @param   {string} [options.msgFormat=string] - Message format: 'string' for JavaScript string\n     *   (gets converted to UTF-8 for hashing); 'hex-bytes' for string of hex bytes ('616263' ≡ 'abc') .\n     * @param   {string} [options.outFormat=hex] - Output format: 'hex' for string of contiguous\n     *   hex bytes; 'hex-w' for grouping hex bytes into groups of (4 byte / 8 character) words.\n     * @returns {string} Hash of msg as hex character string.\n     *\n     * @example\n     *   import Sha1 from './sha1.js';\n     *   const hash = Sha1.hash('abc'); // 'a9993e364706816aba3e25717850c26c9cd0d89d'\n     */\n    static hash(msg, options) {\n        const defaults = { msgFormat: 'string', outFormat: 'hex' };\n        const opt = Object.assign(defaults, options);\n\n        switch (opt.msgFormat) {\n            default: // default is to convert string to UTF-8, as SHA only deals with byte-streams\n            case 'string':   msg = utf8Encode(msg);       break;\n            case 'hex-bytes':msg = hexBytesToString(msg); break; // mostly for running tests\n        }\n\n        // constants [§4.2.1]\n        const K = [ 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6 ];\n\n        // initial hash value [§5.3.1]\n        const H = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n\n        // PREPROCESSING [§6.1.1]\n\n        msg += String.fromCharCode(0x80);  // add trailing '1' bit (+ 0's padding) to string [§5.1.1]\n\n        // convert string msg into 512-bit/16-integer blocks arrays of ints [§5.2.1]\n        const l = msg.length/4 + 2; // length (in 32-bit integers) of msg + ‘1’ + appended length\n        const N = Math.ceil(l/16);  // number of 16-integer-blocks required to hold 'l' ints\n        const M = new Array(N);\n\n        for (let i=0; i<N; i++) {\n            M[i] = new Array(16);\n            for (let j=0; j<16; j++) {  // encode 4 chars per integer, big-endian encoding\n                M[i][j] = (msg.charCodeAt(i*64+j*4+0)<<24) | (msg.charCodeAt(i*64+j*4+1)<<16)\n                        | (msg.charCodeAt(i*64+j*4+2)<< 8) | (msg.charCodeAt(i*64+j*4+3)<< 0);\n            } // note running off the end of msg is ok 'cos bitwise ops on NaN return 0\n        }\n        // add length (in bits) into final pair of 32-bit integers (big-endian) [§5.1.1]\n        // note: most significant word would be (len-1)*8 >>> 32, but since JS converts\n        // bitwise-op args to 32 bits, we need to simulate this by arithmetic operators\n        M[N-1][14] = ((msg.length-1)*8) / Math.pow(2, 32); M[N-1][14] = Math.floor(M[N-1][14]);\n        M[N-1][15] = ((msg.length-1)*8) & 0xffffffff;\n\n        // HASH COMPUTATION [§6.1.2]\n\n        for (let i=0; i<N; i++) {\n            const W = new Array(80);\n\n            // 1 - prepare message schedule 'W'\n            for (let t=0;  t<16; t++) W[t] = M[i][t];\n            for (let t=16; t<80; t++) W[t] = Sha1.ROTL(W[t-3] ^ W[t-8] ^ W[t-14] ^ W[t-16], 1);\n\n            // 2 - initialise five working variables a, b, c, d, e with previous hash value\n            let a = H[0], b = H[1], c = H[2], d = H[3], e = H[4];\n\n            // 3 - main loop (use JavaScript '>>> 0' to emulate UInt32 variables)\n            for (let t=0; t<80; t++) {\n                const s = Math.floor(t/20); // seq for blocks of 'f' functions and 'K' constants\n                const T = (Sha1.ROTL(a, 5) + Sha1.f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n                e = d;\n                d = c;\n                c = Sha1.ROTL(b, 30) >>> 0;\n                b = a;\n                a = T;\n            }\n\n            // 4 - compute the new intermediate hash value (note 'addition modulo 2^32' – JavaScript\n            // '>>> 0' coerces to unsigned UInt32 which achieves modulo 2^32 addition)\n            H[0] = (H[0]+a) >>> 0;\n            H[1] = (H[1]+b) >>> 0;\n            H[2] = (H[2]+c) >>> 0;\n            H[3] = (H[3]+d) >>> 0;\n            H[4] = (H[4]+e) >>> 0;\n        }\n\n        // convert H0..H4 to hex strings (with leading zeros)\n        for (let h=0; h<H.length; h++) H[h] = ('00000000'+H[h].toString(16)).slice(-8);\n\n        // concatenate H0..H4, with separator if required\n        const separator = opt.outFormat=='hex-w' ? ' ' : '';\n\n        return H.join(separator);\n\n        /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n        function utf8Encode(str) {\n            try {\n                return new TextEncoder().encode(str, 'utf-8').reduce((prev, curr) => prev + String.fromCharCode(curr), '');\n            } catch (e) { // no TextEncoder available?\n                return unescape(encodeURIComponent(str)); // monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n            }\n        }\n\n        function hexBytesToString(hexStr) { // convert string of hex numbers to a string of chars (eg '616263' -> 'abc').\n            const str = hexStr.replace(' ', ''); // allow space-separated groups\n            return str=='' ? '' : str.match(/.{2}/g).map(byte => String.fromCharCode(parseInt(byte, 16))).join('');\n        }\n    }\n\n\n    /**\n     * Function 'f' [§4.1.1].\n     * @private\n     */\n    static f(s, x, y, z)  {\n        switch (s) {\n            case 0: return (x & y) ^ (~x & z);          // Ch()\n            case 1: return  x ^ y  ^  z;                // Parity()\n            case 2: return (x & y) ^ (x & z) ^ (y & z); // Maj()\n            case 3: return  x ^ y  ^  z;                // Parity()\n        }\n    }\n\n\n    /**\n     * Rotates left (circular left shift) value x by n positions [§3.2.5].\n     * @private\n     */\n    static ROTL(x, n) {\n        return (x<<n) | (x>>>(32-n));\n    }\n\n}\n\n\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\nexport default Sha1;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/* eslint-disable no-console */\nimport sha1 from \"crypto-libraries/sha1\";\nimport { LibFaustLoader, LibFaust } from \"./LibFaustLoader\";\nimport { FaustWasmToScriptProcessor } from \"./FaustWasmToScriptProcessor\";\nimport { FaustAudioWorkletProcessorWrapper } from \"./FaustAudioWorkletProcessor\";\nimport { FaustAudioWorkletNode } from \"./FaustAudioWorkletNode\";\n\nimport * as utils from \"./utils\";\nimport { FaustOfflineProcessor } from \"./FaustOfflineProcessor\";\nimport { TCompiledDsp, TFaustCompileOptions, FaustScriptProcessorNode, TFaustCompileArgs, TCompiledCode, TCompiledCodes, TAudioNodeOptions, TCompiledStrCodes } from \"./types\";\n\n// import * as Binaryen from \"binaryen\";\n\n///<reference path=\"libfaust.d.ts\"/>\n\n/**\n * Main Faust class,\n * usage: `new Faust().ready.then(faust => any);`\n *\n * @export\n * @class Faust\n */\nexport class Faust {\n    /**\n     * The libfaust Wasm Emscripten Module\n     *\n     * @private\n     * @type {LibFaust}\n     * @memberof Faust\n     */\n    private libFaust: LibFaust;\n    // private createWasmCDSPFactoryFromString: ($name: number, $code: number, argc: number, $argv: number, $errorMsg: number, internalMemory: boolean) => number;\n    // private deleteAllWasmCDSPFactories: () => void;\n    // private expandCDSPFromString: ($name: number, $code: number, argc: number, $argv: number, $shaKey: number, $errorMsg: number) => number;\n    // private getCLibFaustVersion: () => number;\n    // private getWasmCModule: ($moduleCode: number) => number;\n    // private getWasmCModuleSize: ($moduleCode: number) => number;\n    // private getWasmCHelpers: ($moduleCode: number) => number;\n    // private freeWasmCModule: ($moduleCode: number) => void;\n    // private freeCMemory: ($: number) => number;\n    // private cleanupAfterException: () => void;\n    // private getErrorAfterException: () => number;\n    // private getLibFaustVersion: () => string;\n    // private generateCAuxFilesFromString: ($name: number, $code: number, argc: number, $argv: number, $errorMsg: number) => number;\n    /**\n     * Debug mode, set to true to print out each message\n     *\n     * @type {boolean}\n     * @memberof Faust\n     */\n    debug: boolean = false;\n    /**\n     * An object to storage compiled dsp with it's sha1\n     *\n     * @private\n     * @type {{ [shaKey: string]: TCompiledDsp }}\n     * @memberof Faust\n     */\n    private dspTable: { [shaKey: string]: TCompiledDsp } = {};\n    /**\n     * Registered WorkletProcessor names\n     *\n     * @private\n     * @type {string[]}\n     * @memberof Faust\n     */\n    private workletProcessors: string[] = [];\n    private _log: string[] = [];\n    /**\n     * Offline processor used to plot\n     *\n     * @private\n     * @type {FaustOfflineProcessor}\n     * @memberof Faust\n     */\n    private offlineProcessor: FaustOfflineProcessor = new FaustOfflineProcessor();\n    /**\n     * Location of `libfaust-wasm.wasm`\n     *\n     * @private\n     * @type {string}\n     * @memberof Faust\n     */\n    private wasmLocation: string;\n    /**\n     * Location of `libfaust-wasm.data`\n     *\n     * @private\n     * @type {string}\n     * @memberof Faust\n     */\n    private dataLocation: string;\n\n    /**\n     * Creates an instance of Faust\n     * usage: `new Faust().ready.then(faust => any);`\n     *\n     * @param {{ debug?: boolean; wasmLocation?: string; dataLocation?: string }} [options]\n     * @memberof Faust\n     */\n    constructor(debug: boolean, lib: LibFaust) {\n        this.debug = debug;\n        this.libFaust = lib;\n    }\n    /**\n     * Load a libfaust module\n     *\n     * @returns {Promise<Faust>}\n     * @memberof Faust\n     */\n    // async loadLibFaust(): Promise<Faust> {\n    //     if (this.libFaust) return this;\n    //     // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    //     // @ts-ignore\n    //     this.libFaust = await LibFaustLoader.load(this.wasmLocation, this.dataLocation);\n    //     // this.importLibFaustFunctions();\n    //     return this;\n    // }\n    /**\n     * A promise to resolve when libfaust is ready.\n     *\n     * @readonly\n     * @type {Promise<Faust>}\n     * @memberof Faust\n     */\n    // get ready(): Promise<Faust> {\n    //     return this.loadLibFaust();\n    // }\n    // private importLibFaustFunctions(): void {\n    //     if (!this.libFaust) return;\n        // this.cleanupAfterException = this.libFaust.cwrap(\"cleanupAfterException\", null, []);\n        // this.getErrorAfterException = this.libFaust.cwrap(\"getErrorAfterException\", \"number\", []);\n\n        // this.createWasmCDSPFactoryFromString = this.libFaust.cwrap(\"createWasmCDSPFactoryFromString\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\n        // this.deleteAllWasmCDSPFactories = this.libFaust.cwrap(\"deleteAllWasmCDSPFactories\", null, []);\n        // this.expandCDSPFromString = this.libFaust.cwrap(\"expandCDSPFromString\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\n        // this.getCLibFaustVersion = this.libFaust.cwrap(\"getCLibFaustVersion\", \"number\", []);\n        // this.getWasmCModule = this.libFaust.cwrap(\"getWasmCModule\", \"number\", [\"number\"]);\n        // this.getWasmCModuleSize = this.libFaust.cwrap(\"getWasmCModuleSize\", \"number\", [\"number\"]);\n        // this.getWasmCHelpers = this.libFaust.cwrap(\"getWasmCHelpers\", \"number\", [\"number\"]);\n        // this.freeWasmCModule = this.libFaust.cwrap(\"freeWasmCModule\", null, [\"number\"]);\n        // this.freeCMemory = this.libFaust.cwrap(\"freeCMemory\", null, [\"number\"]);\n        // this.cleanupAfterException = this.libFaust.cwrap(\"cleanupAfterException\", null, []);\n        // this.getErrorAfterException = this.libFaust.cwrap(\"getErrorAfterException\", \"number\", []);\n        // this.getLibFaustVersion = () => this.libFaust.UTF8ToString(this.getCLibFaustVersion());\n        // this.generateCAuxFilesFromString = this.libFaust.cwrap(\"generateCAuxFilesFromString\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\"]);\n    // }\n    /**\n     * Create a AudioNode from dsp source code with options.\n     *\n     * @param {string} code - the source code\n     * @param {TFaustCompileOptions} optionsIn - options with audioCtx, bufferSize, voices, useWorklet, args, plot and plotHandler\n     * @returns {Promise<FaustAudioWorkletNode | FaustScriptProcessorNode>}\n     * @memberof Faust\n     */\n    async getNode(code: string, optionsIn: TFaustCompileOptions): Promise<FaustAudioWorkletNode | FaustScriptProcessorNode> {\n        const { audioCtx, voices, useWorklet, bufferSize, plotHandler, args } = optionsIn;\n        const argv = utils.toArgv(args);\n        const compiledDsp = await this.compileCodes(code, argv, !voices);\n        if (!compiledDsp) return null;\n        const options = { compiledDsp, audioCtx, voices, plotHandler, bufferSize: useWorklet ? 128 : bufferSize };\n        return useWorklet ? this.getAudioWorkletNode(options) : this.getScriptProcessorNode(options);\n    }\n    /**\n     * Get DSP information\n     *\n     * @param {string} code\n     * @param {{ voices?: number; args?: TFaustCompileArgs }} optionsIn\n     * @returns {Promise<TCompiledDsp>}\n     * @memberof Faust\n     */\n    async inspect(code: string, optionsIn: { voices?: number; args?: TFaustCompileArgs }): Promise<TCompiledDsp> {\n        const { voices, args } = optionsIn;\n        const argv = utils.toArgv(args);\n        return this.compileCodes(code, argv, !voices);\n    }\n    /**\n     * Plot a dsp offline.\n     *\n     * @param {{ code?: string; size?: number; sampleRate?: number; args?: TFaustCompileArgs }} [optionsIn]\n     * @returns {Promise<Float32Array[]>}\n     * @memberof Faust\n     */\n    async plot(optionsIn?: { code?: string; size?: number; sampleRate?: number; args?: TFaustCompileArgs }): Promise<Float32Array[]> {\n        let compiledDsp;\n        const argv = utils.toArgv(optionsIn.args);\n        if (optionsIn.code) {\n            compiledDsp = await this.compileCodes(optionsIn.code, argv, true);\n            if (!compiledDsp) return null;\n        }\n        return this.offlineProcessor.plot({ compiledDsp, ...optionsIn });\n    }\n    /**\n     * Generate Uint8Array and helpersCode from a dsp source code\n     *\n     * @private\n     * @param {string} factoryName - Class name of the source code\n     * @param {string} code - dsp source code\n     * @param {string[]} argvIn - Array of paramaters to be given to the Faust compiler\n     * @param {boolean} internalMemory - Use internal Memory flag, false for poly, true for mono\n     * @returns {TCompiledCode} - An object with ui8Code, code, helpersCode\n     * @memberof Faust\n     */\n    private compileCode(factoryName: string, code: string, argvIn: string[], internalMemory: boolean): TCompiledCode {\n        // const codeSize = this.libFaust.lengthBytesUTF8(code) + 1;\n        // const $code = this.libFaust._malloc(codeSize);\n        // const name = \"FaustDSP\";\n        // const nameSize = this.libFaust.lengthBytesUTF8(name) + 1;\n        // const $name = this.libFaust._malloc(nameSize);\n        // const $errorMsg = this.libFaust._malloc(4096);\n\n        // this.libFaust.stringToUTF8(name, $name, nameSize);\n        // this.libFaust.stringToUTF8(code, $code, codeSize);\n\n        // Add 'cn' option with the factory name\n        // const argv = argvIn || [];\n        // argv.push(\"-cn\", factoryName);\n\n        // // Prepare 'argv_aux' array for C side\n        // const ptrSize = 4;\n        // const $argv = this.libFaust._malloc(argv.length * ptrSize); // Get buffer from emscripten.\n        // let argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length); // Get a integer view on the newly allocated buffer.\n        // for (let i = 0; i < argv.length; i++) {\n        //     const size$arg = this.libFaust.lengthBytesUTF8(argv[i]) + 1;\n        //     const $arg = this.libFaust._malloc(size$arg);\n        //     this.libFaust.stringToUTF8(argv[i], $arg, size$arg);\n        //     argvBuffer$[i] = $arg;\n        // }\n        let argsStr = utils.argsTbl2String(argvIn) + \" -cn \" + factoryName;\n        try {\n            const time1 = performance.now();\n            let fact = this.libFaust.createDSPFactory(\"FaustDSP\", code, argsStr, internalMemory);\n            const time2 = performance.now();\n            this.log(\"Faust compilation duration : \" + (time2 - time1));\n            if (fact.error) throw new Error(fact.error);\n\n            if (fact.module === 0) return null;\n\n            let wasm = this.libFaust.getWasmModule(fact.module);\n            this.log(\"getWasmModule \"  + wasm.module);\n            // Copy native 'binary' string in JavaScript Uint8Array\n            const size = wasm.data.size();\n            const ui8Code = new Uint8Array(size);\n            this.log(\"copy \" + size);\n            for (let i = 0; i < size; i++) {\n                ui8Code[i] = wasm.data.get(i);\n            }\n            // Free C allocated wasm module\n            // this.log(\"freeWasmModule \" + wasm.module);\n            // this.libFaust.freeWasmModule(wasm.module);\n            // this.log(\"freeWasmModule done\");\n            return { ui8Code, code, helpersCode: wasm.helper };\n\n            // const time1 = performance.now();\n            // const $moduleCode = this.createWasmCDSPFactoryFromString($name, $code, argv.length, $argv, $errorMsg, internalMemory);\n            // const time2 = performance.now();\n            // this.log(\"Faust compilation duration : \" + (time2 - time1));\n            // const errorMsg = this.libFaust.UTF8ToString($errorMsg);\n            // if (errorMsg) throw new Error(errorMsg);\n\n            // if ($moduleCode === 0) return null;\n            // const $compiledCode = this.getWasmCModule($moduleCode);\n            // const compiledCodeSize = this.getWasmCModuleSize($moduleCode);\n            // // Copy native 'binary' string in JavaScript Uint8Array\n            // const ui8Code = new Uint8Array(compiledCodeSize);\n            // for (let i = 0; i < compiledCodeSize; i++) {\n            //     // faster than 'getValue' which gets the type of access for each read...\n            //     ui8Code[i] = this.libFaust.HEAP8[$compiledCode + i];\n            // }\n            // const $helpersCode = this.getWasmCHelpers($moduleCode);\n            // const helpersCode = this.libFaust.UTF8ToString($helpersCode);\n            // // Free strings\n            // this.libFaust._free($code);\n            // this.libFaust._free($name);\n            // this.libFaust._free($errorMsg);\n            // // Free C allocated wasm module\n            // this.freeWasmCModule($moduleCode);\n            // // Get an updated integer view on the newly allocated buffer after possible emscripten memory grow\n            // argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length);\n            // // Free 'argv' C side array\n            // for (let i = 0; i < argv.length; i++) {\n            //     this.libFaust._free(argvBuffer$[i]);\n            // }\n            // this.libFaust._free($argv);\n            // return { ui8Code, code, helpersCode };\n        } catch (e) {\n            // libfaust is compiled without C++ exception activated, so a JS exception is throwed and catched here\n            const errorMsg = this.libFaust.getErrorAfterException();\n            this.libFaust.cleanupAfterException();\n            // Report the Emscripten error\n            throw errorMsg ? new Error(errorMsg) : e;\n        }\n    }\n    /**\n     * createDSPFactoryAux\n     * Generate shaKey, effects, dsp, their Wasm Modules and helpers from a dsp source code\n     *\n     * @private\n     * @param {string} code - dsp source code\n     * @param {string[]} argv - Array of paramaters to be given to the Faust compiler\n     * @param {boolean} internalMemory - Use internal Memory flag, false for poly, true for mono\n     * @returns {Promise<TCompiledDsp>} - An object contains shaKey, empty polyphony map, original codes, modules and helpers\n     * @memberof Faust\n     */\n    private async compileCodes(code: string, argv: string[], internalMemory: boolean): Promise<TCompiledDsp> {\n        // Code memory type and argv in the SHAKey to differentiate compilation flags and Monophonic and Polyphonic factories\n        const strArgv = argv.join(\"\");\n        const shaKey = sha1.hash(code + (internalMemory ? \"internal_memory\" : \"external_memory\") + strArgv, { msgFormat: \"string\" });\n        const compiledDsp = this.dspTable[shaKey];\n        if (compiledDsp) {\n            this.log(\"Existing library : \" + shaKey);\n            // Existing factory, do not create it...\n            return compiledDsp;\n        }\n        // this.log(\"libfaust.js version : \" + this.getLibFaustVersion());\n        this.log(\"libfaust.js version : \" + this.libFaust.version());\n        // Create 'effect' expression\n        const effectCode = `adapt(1,1) = _; adapt(2,2) = _,_; adapt(1,2) = _ <: _,_; adapt(2,1) = _,_ :> _;\nadaptor(F,G) = adapt(outputs(F),inputs(G));\ndsp_code = environment{${code}};\nprocess = adaptor(dsp_code.process, dsp_code.effect) : dsp_code.effect;`;\n        const dspCompiledCode = this.compileCode(shaKey, code, argv, internalMemory);\n        let effectCompiledCode: TCompiledCode;\n        try {\n            effectCompiledCode = this.compileCode(shaKey + \"_\", effectCode, argv, internalMemory);\n        } catch (e) {} // eslint-disable-line no-empty\n        const compiledCodes = { dsp: dspCompiledCode, effect: effectCompiledCode };\n        return this.compileDsp(compiledCodes, shaKey);\n    }\n    /**\n     * From a DSP source file, creates a \"self-contained\" DSP source string where all needed librairies have been included.\n     * All compilations options are 'normalized' and included as a comment in the expanded string.\n     *\n     * @param {string} code - dsp source code\n     * @param {TFaustCompileArgs} args - Paramaters to be given to the Faust compiler\n     * @returns {string} \"self-contained\" DSP source string where all needed librairies\n     * @memberof Faust\n     */\n    expandCode(code: string, args?: TFaustCompileArgs): string {\n        this.log(\"libfaust.js version : \" + this.libFaust.version());\n        // Allocate strings on the HEAP\n        // const codeSize = this.libFaust.lengthBytesUTF8(code) + 1;\n        // const $code = this.libFaust._malloc(codeSize);\n\n        // const name = \"FaustDSP\";\n        // const nameSize = this.libFaust.lengthBytesUTF8(name) + 1;\n        // const $name = this.libFaust._malloc(nameSize);\n\n        // const $shaKey = this.libFaust._malloc(64);\n        // const $errorMsg = this.libFaust._malloc(4096);\n\n        // this.libFaust.stringToUTF8(name, $name, nameSize);\n        // this.libFaust.stringToUTF8(code, $code, codeSize);\n\n        // const argvIn = args ? utils.toArgv(args) : [];\n        // // Force \"wasm\" compilation\n        // const argv = [...argvIn, \"-lang\", \"wasm\"];\n\n        const argsStr = utils.args2String(args) + \"-lang wasm\";\n\n        // Prepare 'argv' array for C side\n        // const ptrSize = 4;\n        // const $argv = this.libFaust._malloc(argv.length * ptrSize); // Get buffer from emscripten.\n        // let argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length); // Get a integer view on the newly allocated buffer.\n        // for (let i = 0; i < argv.length; i++) {\n        //     const size$arg = this.libFaust.lengthBytesUTF8(argv[i]) + 1;\n        //     const $arg = this.libFaust._malloc(size$arg);\n        //     this.libFaust.stringToUTF8(argv[i], $arg, size$arg);\n        //     argvBuffer$[i] = $arg;\n        // }\n        try {\n            let expand = this.libFaust.expandDSP(\"FaustDSP\", code, argsStr);\n            const expandedCode = expand.dsp;\n            const errorMsg = expand.error;\n            if (errorMsg) this.error(errorMsg);\n\n            // const $expandedCode = this.expandCDSPFromString($name, $code, argv.length, $argv, $shaKey, $errorMsg);\n            // const expandedCode = this.libFaust.UTF8ToString($expandedCode);\n            // const errorMsg = this.libFaust.UTF8ToString($errorMsg);\n            // if (errorMsg) this.error(errorMsg);\n            // Free strings\n            // this.libFaust._free($code);\n            // this.libFaust._free($name);\n            // this.libFaust._free($shaKey);\n            // this.libFaust._free($errorMsg);\n            // Free C allocated expanded string\n            // this.freeCMemory($expandedCode);\n            // Get an updated integer view on the newly allocated buffer after possible emscripten memory grow\n            // argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length);\n            // // Free 'argv' C side array\n            // for (let i = 0; i < argv.length; i++) {\n            //     this.libFaust._free(argvBuffer$[i]);\n            // }\n            // this.libFaust._free($argv);\n            return expandedCode;\n        } catch (e) {\n            // libfaust is compiled without C++ exception activated, so a JS exception is throwed and catched here\n            const errorMsg = this.libFaust.getErrorAfterException();\n            this.libFaust.cleanupAfterException();\n\n            // const errorMsg = this.libFaust.UTF8ToString(this.getErrorAfterException());\n            // this.cleanupAfterException();\n            // Report the Emscripten error\n            throw errorMsg ? new Error(errorMsg) : e;\n        }\n    }\n    /**\n     * readDSPFactoryFromMachineAux\n     * Compile wasm modules from dsp and effect Uint8Arrays\n     *\n     * @private\n     * @param {TCompiledCodes} codes\n     * @param {string} shaKey\n     * @returns {Promise<TCompiledDsp>}\n     * @memberof Faust\n     */\n    private async compileDsp(codes: TCompiledCodes, shaKey: string): Promise<TCompiledDsp> {\n        const time1 = performance.now();\n        /*\n        if (typeof Binaryen !== \"undefined\") {\n            try {\n                const binaryenModule = Binaryen.readBinary(codes.dsp.ui8Code);\n                this.log(\"Binaryen based optimisation\");\n                binaryenModule.optimize();\n                // console.log(binaryen_module.emitText());\n                codes.dsp.ui8Code = binaryenModule.emitBinary();\n                binaryenModule.dispose();\n            } catch (e) {\n                this.log(\"Binaryen not available, no optimisation...\");\n            }\n        }\n        */\n        const dspModule = await WebAssembly.compile(codes.dsp.ui8Code);\n        if (!dspModule) {\n            this.error(\"Faust DSP factory cannot be compiled\");\n            throw new Error(\"Faust DSP factory cannot be compiled\");\n        }\n        const time2 = performance.now();\n        this.log(\"WASM compilation duration : \" + (time2 - time1));\n        const compiledDsp: TCompiledDsp = { shaKey, codes, dspModule, dspMeta: undefined }; // Default mode\n        // 'libfaust.js' wasm backend generates UI methods, then we compile the code\n        // eval(helpers_code1);\n        // factory.getJSON = eval(\"getJSON\" + dspName);\n        // factory.getBase64Code = eval(\"getBase64Code\" + dspName);\n        try {\n            const json = codes.dsp.helpersCode.match(/getJSON\\w+?\\(\\)[\\s\\n]*{[\\s\\n]*return[\\s\\n]*'(\\{.+?)';}/)[1].replace(/\\\\'/g, \"'\");\n            // const base64Code = codes.dsp.helpersCode.match(/getBase64Code\\w+?\\(\\)[\\s\\n]*{[\\s\\n]*return[\\s\\n]*\"([A-Za-z0-9+/=]+?)\";[\\s\\n]+}/)[1];\n            const meta = JSON.parse(json);\n            compiledDsp.dspMeta = meta;\n        } catch (e) {\n            this.error(\"Error in JSON.parse: \" + e.message);\n            throw e;\n        }\n        this.dspTable[shaKey] = compiledDsp;\n        // Possibly compile effect\n        if (!codes.effect) return compiledDsp;\n        try {\n            const effectModule = await WebAssembly.compile(codes.effect.ui8Code);\n            compiledDsp.effectModule = effectModule;\n            // 'libfaust.js' wasm backend generates UI methods, then we compile the code\n            // eval(helpers_code2);\n            // factory.getJSONeffect = eval(\"getJSON\" + factory_name2);\n            // factory.getBase64Codeeffect = eval(\"getBase64Code\" + factory_name2);\n            try {\n                const json = codes.effect.helpersCode.match(/getJSON\\w+?\\(\\)[\\s\\n]*{[\\s\\n]*return[\\s\\n]*'(\\{.+?)';}/)[1].replace(/\\\\'/g, \"'\");\n                // const base64Code = codes.effect.helpersCode.match(/getBase64Code\\w+?\\(\\)[\\s\\n]*{[\\s\\n]*return[\\s\\n]*\"([A-Za-z0-9+/=]+?)\";[\\s\\n]+}/)[1];\n                const meta = JSON.parse(json);\n                compiledDsp.effectMeta = meta;\n            } catch (e) {\n                this.error(\"Error in JSON.parse: \" + e.message);\n                throw e;\n            }\n        } catch (e) {\n            return compiledDsp;\n        }\n        return compiledDsp;\n    }\n    /**\n     * Get a ScriptProcessorNode from compiled dsp\n     *\n     * @private\n     * @param {TCompiledDsp} compiledDsp - DSP compiled by libfaust\n     * @param {TAudioNodeOptions} optionsIn\n     * @returns {Promise<FaustScriptProcessorNode>}\n     * @memberof Faust\n     */\n    private async getScriptProcessorNode(optionsIn: TAudioNodeOptions): Promise<FaustScriptProcessorNode> {\n        return new FaustWasmToScriptProcessor(this).getNode(optionsIn);\n    }\n    // deleteDSPInstance() {}\n    /**\n     * Get a AudioWorkletNode from compiled dsp\n     *\n     * @private\n     * @param {TAudioNodeOptions} optionsIn\n     * @returns {Promise<FaustAudioWorkletNode>}\n     * @memberof Faust\n     */\n    private async getAudioWorkletNode(optionsIn: TAudioNodeOptions): Promise<FaustAudioWorkletNode> {\n        const { compiledDsp: compiledDspWithCodes, audioCtx, voices, plotHandler } = optionsIn;\n        const compiledDsp = { ...compiledDspWithCodes };\n        delete compiledDsp.codes;\n        const id = compiledDsp.shaKey + \"_\" + voices;\n        if (this.workletProcessors.indexOf(id) === -1) {\n            const strProcessor = `\nconst remap = ${utils.remap.toString()};\nconst midiToFreq = ${utils.midiToFreq.toString()};\nconst findPath = (${utils.findPathClosure.toString()})();\nconst createWasmImport = ${utils.createWasmImport.toString()};\nconst createWasmMemory = ${utils.createWasmMemory.toString()};\nconst faustData = ${JSON.stringify({\n        id,\n        voices,\n        dspMeta: compiledDsp.dspMeta,\n        effectMeta: compiledDsp.effectMeta\n    })};\n(${FaustAudioWorkletProcessorWrapper.toString()})();\n`;\n            const url = window.URL.createObjectURL(new Blob([strProcessor], { type: \"text/javascript\" }));\n            await audioCtx.audioWorklet.addModule(url);\n            this.workletProcessors.push(id);\n        }\n        return new FaustAudioWorkletNode({ audioCtx, id, voices, compiledDsp, plotHandler, mixer32Module: utils.mixer32Module });\n    }\n    /**\n     * Remove a DSP from registry\n     *\n     * @private\n     * @param {TCompiledDsp} compiledDsp\n     * @memberof Faust\n     */\n    private deleteDsp(compiledDsp: TCompiledDsp): void {\n        // The JS side is cleared\n        delete this.dspTable[compiledDsp.shaKey];\n        // The native C++ is cleared each time (freeWasmCModule has been already called in faust.compile)\n        this.libFaust.deleteAllDSPFactories();\n        // this.deleteAllWasmCDSPFactories();\n    }\n    /**\n     * Stringify current storaged DSP Table.\n     *\n     * @returns {string}\n     * @memberof Faust\n     */\n    stringifyDspTable(): string {\n        const strTable: { [shaKey: string]: TCompiledStrCodes } = {};\n        for (const key in this.dspTable) {\n            const { codes } = this.dspTable[key];\n            strTable[key] = {\n                dsp: {\n                    strCode: btoa(utils.ab2str(codes.dsp.ui8Code)),\n                    code: codes.dsp.code,\n                    helpersCode: codes.dsp.helpersCode\n                },\n                effect: codes.effect ? {\n                    strCode: btoa(utils.ab2str(codes.effect.ui8Code)),\n                    code: codes.effect.code,\n                    helpersCode: codes.effect.helpersCode\n                } : undefined\n            };\n        }\n        return JSON.stringify(strTable);\n    }\n    /**\n     * parse and store a stringified DSP Table.\n     *\n     * @param {string} str\n     * @memberof Faust\n     */\n    parseDspTable(str: string) {\n        const strTable = JSON.parse(str) as { [shaKey: string]: TCompiledStrCodes };\n        for (const shaKey in strTable) {\n            if (this.dspTable[shaKey]) continue;\n            const strCodes = strTable[shaKey];\n            const compiledCodes: TCompiledCodes = {\n                dsp: {\n                    ui8Code: utils.str2ab(atob(strCodes.dsp.strCode)),\n                    code: strCodes.dsp.code,\n                    helpersCode: strCodes.dsp.helpersCode\n                },\n                effect: strCodes.effect ? {\n                    ui8Code: utils.str2ab(atob(strCodes.effect.strCode)),\n                    code: strCodes.effect.code,\n                    helpersCode: strCodes.effect.helpersCode\n                } : undefined\n            };\n            this.compileDsp(compiledCodes, shaKey).then(dsp => this.dspTable[shaKey] = dsp);\n        }\n    }\n    // deleteDSPWorkletInstance() {}\n    /**\n     * Get an SVG Diagram XML File as string\n     *\n     * @param {string} code faust source code\n     * @param {TFaustCompileArgs} args - Paramaters to be given to the Faust compiler\n     * @returns {string} svg file as string\n     * @memberof Faust\n     */\n    getDiagram(code: string, args?: TFaustCompileArgs): string {\n        // const codeSize = this.libFaust.lengthBytesUTF8(code) + 1;\n        // const $code = this.libFaust._malloc(codeSize);\n        // const name = \"FaustDSP\";\n        // const nameSize = this.libFaust.lengthBytesUTF8(name) + 1;\n        // const $name = this.libFaust._malloc(nameSize);\n        // const $errorMsg = this.libFaust._malloc(4096);\n\n        // this.libFaust.stringToUTF8(name, $name, nameSize);\n        // this.libFaust.stringToUTF8(code, $code, codeSize);\n        // const argvIn = args ? utils.toArgv(args) : [];\n        // const argv = [...argvIn, \"-lang\", \"wast\", \"-o\", \"/dev/null\", \"-svg\"];\n\n        // // Prepare 'argv' array for C side\n        // const ptrSize = 4;\n        // const $argv = this.libFaust._malloc(argv.length * ptrSize); // Get buffer from emscripten.\n        // let argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length); // Get a integer view on the newly allocated buffer.\n        // for (let i = 0; i < argv.length; i++) {\n        //     const size$arg = this.libFaust.lengthBytesUTF8(argv[i]) + 1;\n        //     const $arg = this.libFaust._malloc(size$arg);\n        //     this.libFaust.stringToUTF8(argv[i], $arg, size$arg);\n        //     argvBuffer$[i] = $arg;\n        // }\n\n        const argsStr = utils.args2String(args) + \"-lang wasm -o /dev/null -svg\";\n        try {\n            let aux = this.libFaust.generateAuxFiles(\"FaustDSP\", code, argsStr);\n\n            // this.generateCAuxFilesFromString($name, $code, argv.length, $argv, $errorMsg);\n            // // Free strings\n            // this.libFaust._free($code);\n            // this.libFaust._free($name);\n            // this.libFaust._free($errorMsg);\n            // // Get an updated integer view on the newly allocated buffer after possible emscripten memory grow\n            // argvBuffer$ = new Int32Array(this.libFaust.HEAP32.buffer, $argv, argv.length);\n            // // Free 'argv' C side array\n            // for (let i = 0; i < argv.length; i++) {\n            //     this.libFaust._free(argvBuffer$[i]);\n            // }\n            // this.libFaust._free($argv);\n        } catch (e) {\n            // libfaust is compiled without C++ exception activated, so a JS exception is throwed and catched here\n            // const errorMsg = this.libFaust.UTF8ToString(this.getErrorAfterException());\n            const errorMsg = this.libFaust.getErrorAfterException();\n            this.libFaust.cleanupAfterException();\n            // Report the Emscripten error\n            throw errorMsg ? new Error(errorMsg) : e;\n        }\n        return this.libFaust.FS.readFile(\"FaustDSP-svg/process.svg\", { encoding: \"utf8\" }) as string;\n    }\n    /**\n     * Expose LibFaust Emscripten Module File System\n     *\n     * @param {string} path path string\n     * @returns {Emscripten.FS} Emscripten Module File System\n     * @memberof Faust\n     */\n    get fs() {\n        return this.libFaust.FS;\n    }\n    log(...args: any[]) {\n        if (this.debug) console.log(...args);\n        const msg = args.length === 1 && typeof args[0] === \"string\" ? args[0] : JSON.stringify(args.length !== 1 ? args : args[0]);\n        this._log.push(msg);\n        if (typeof this.logHandler === \"function\") this.logHandler(msg, 0);\n    }\n    error(...args: any[]) {\n        console.error(...args);\n        const msg = args.length === 1 && typeof args[0] === \"string\" ? args[0] : JSON.stringify(args.length !== 1 ? args : args[0]);\n        this._log.push(msg);\n        if (typeof this.logHandler === \"function\") this.logHandler(msg, 1);\n    }\n    logHandler: (msg: string, errorLevel: 1 | 0) => any;\n}\n","/* eslint-disable object-curly-newline */\n/* eslint-disable object-property-newline */\nimport { TDspMeta, TCompiledDsp, TFaustUI, TFaustUIGroup, TFaustUIItem } from \"./types\";\nimport { remap } from \"./utils\";\n\nexport class FaustAudioWorkletNode extends (window.AudioWorkletNode ? AudioWorkletNode : null) {\n    onprocessorerror = (e: ErrorEvent) => {\n        console.error(\"Error from \" + this.dspMeta.name + \" AudioWorkletNode: \"); // eslint-disable-line no-console\n        throw e.error;\n    }\n    /* WAP ??\n    getMetadata = this.getJSON;\n    setParam = this.setParamValue;\n    getParam = this.getParamValue;\n    inputChannelCount = this.getNumInputs;\n    outputChannelCount = this.getNumOutputs;\n    getParams = () => this.inputsItems;\n    getDescriptor = this.getParams;\n    onMidi = this.midiMessage;\n    getState = async () => {\n        const params = {} as { [key: string]: string };\n        this.getDescriptor().forEach(key => params[key] = JSON.stringify(this.getParam(key)));\n        return params;\n    }\n    setState = async (state: { [key: string]: number; }) => {\n        for (const key in state) {\n            this.setParam(key, state[key]);\n        }\n        try {\n            this.gui.setAttribute(\"state\", JSON.stringify(state));\n        } catch (error) {\n            console.warn(\"Plugin without gui or GUI not defined: \", error);\n        }\n        return state;\n    }\n    setPatch = (patch: any) => this.presets ? this.setState(this.presets[patch]) : undefined; // ??\n    metadata = (handler: (...args: any[]) => any) => handler(null);\n    gui: any;\n    presets: any;\n    */\n\n    voices?: number;\n    dspMeta: TDspMeta;\n    effectMeta: TDspMeta;\n    outputHandler: (address: string, value: number) => any;\n    inputsItems: string[];\n    outputsItems: string[];\n\n    fPitchwheelLabel: { path: string; min: number; max: number }[];\n    fCtrlLabel: { path: string; min: number; max: number }[][];\n\n    plotHandler: (plotted: Float32Array[], index: number, events?: { type: string; data: any }[]) => any;\n\n    constructor(options: { audioCtx: AudioContext; id: string; compiledDsp: TCompiledDsp; voices?: number; plotHandler?: (plotted: Float32Array[], index: number, events?: { type: string; data: any }[]) => any; mixer32Module: WebAssembly.Module }) {\n        super(options.audioCtx, options.id, {\n            numberOfInputs: options.compiledDsp.dspMeta.inputs > 0 ? 1 : 0,\n            numberOfOutputs: options.compiledDsp.dspMeta.outputs > 0 ? 1 : 0,\n            channelCount: Math.max(1, options.compiledDsp.dspMeta.inputs),\n            outputChannelCount: [options.compiledDsp.dspMeta.outputs],\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"speakers\",\n            processorOptions: { id: options.id, voices: options.voices, compiledDsp: options.compiledDsp, mixer32Module: options.mixer32Module }\n        });\n        // Patch it with additional functions\n        this.port.onmessage = (e: MessageEvent) => {\n            if (e.data.type === \"param\" && this.outputHandler) {\n                this.outputHandler(e.data.path, e.data.value);\n            } else if (e.data.type === \"plot\") {\n                if (this.plotHandler) this.plotHandler(e.data.value, e.data.index, e.data.events);\n            }\n        };\n        this.voices = options.voices;\n        this.dspMeta = options.compiledDsp.dspMeta;\n        this.effectMeta = options.compiledDsp.effectMeta;\n        this.outputHandler = null;\n        this.inputsItems = [];\n        this.outputsItems = [];\n        this.fPitchwheelLabel = [];\n        this.fCtrlLabel = new Array(128).fill(null).map(() => []);\n        this.plotHandler = options.plotHandler;\n        this.parseUI(this.dspMeta.ui);\n        if (this.effectMeta) this.parseUI(this.effectMeta.ui);\n        try {\n            if (this.parameters) this.parameters.forEach(p => p.automationRate = \"k-rate\");\n        } catch (e) {} // eslint-disable-line no-empty\n    }\n    parseUI(ui: TFaustUI) {\n        ui.forEach(group => this.parseGroup(group));\n    }\n    parseGroup(group: TFaustUIGroup) {\n        if (group.items) this.parseItems(group.items);\n    }\n    parseItems(items: TFaustUIItem[]) {\n        items.forEach(item => this.parseItem(item));\n    }\n    parseItem(item: TFaustUIItem) {\n        if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n            this.parseItems(item.items);\n        } else if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n            // Keep bargraph adresses\n            this.outputsItems.push(item.address);\n        } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n            // Keep inputs adresses\n            this.inputsItems.push(item.address);\n            if (!item.meta) return;\n            item.meta.forEach((meta) => {\n                const { midi } = meta;\n                if (!midi) return;\n                const strMidi = midi.trim();\n                if (strMidi === \"pitchwheel\") {\n                    this.fPitchwheelLabel.push({ path: item.address, min: item.min, max: item.max });\n                } else {\n                    const matched = strMidi.match(/^ctrl\\s(\\d+)/);\n                    if (!matched) return;\n                    this.fCtrlLabel[parseInt(matched[1])].push({ path: item.address, min: item.min, max: item.max });\n                }\n            });\n        }\n    }\n\n    /**\n     * Instantiates a new polyphonic voice.\n     *\n     * @param {number} channel - the MIDI channel (0..15, not used for now)\n     * @param {number} pitch - the MIDI pitch (0..127)\n     * @param {number} velocity - the MIDI velocity (0..127)\n     * @memberof FaustAudioWorkletNode\n     */\n    keyOn(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOn\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n    /**\n     * De-instantiates a polyphonic voice.\n     *\n     * @param {number} channel - the MIDI channel (0..15, not used for now)\n     * @param {number} pitch - the MIDI pitch (0..127)\n     * @param {number} velocity - the MIDI velocity (0..127)\n     * @memberof FaustAudioWorkletNode\n     */\n    keyOff(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOff\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n    /**\n     * Gently terminates all the active voices.\n     *\n     * @memberof FaustAudioWorkletNode\n     */\n    allNotesOff() {\n        const e = { type: \"ctrlChange\", data: [0, 123, 0] };\n        this.port.postMessage(e);\n    }\n    ctrlChange(channel: number, ctrlIn: number, valueIn: any) {\n        const e = { type: \"ctrlChange\", data: [channel, ctrlIn, valueIn] };\n        this.port.postMessage(e);\n        if (!this.fCtrlLabel[ctrlIn].length) return;\n        this.fCtrlLabel[ctrlIn].forEach((ctrl) => {\n            const { path } = ctrl;\n            const value = remap(valueIn, 0, 127, ctrl.min, ctrl.max);\n            const param = this.parameters.get(path);\n            if (param) param.setValueAtTime(value, this.context.currentTime);\n        });\n    }\n    pitchWheel(channel: number, wheel: number) {\n        const e = { type: \"pitchWheel\", data: [channel, wheel] };\n        this.port.postMessage(e);\n        this.fPitchwheelLabel.forEach((pw) => {\n            const { path } = pw;\n            const value = remap(wheel, 0, 16383, pw.min, pw.max);\n            const param = this.parameters.get(path);\n            if (param) param.setValueAtTime(value, this.context.currentTime);\n        });\n    }\n    midiMessage(data: number[] | Uint8Array) {\n        const cmd = data[0] >> 4;\n        const channel = data[0] & 0xf;\n        const data1 = data[1];\n        const data2 = data[2];\n        if (channel === 9) return;\n        if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyOff(channel, data1, data2);\n        else if (cmd === 9) this.keyOn(channel, data1, data2);\n        else if (cmd === 11) this.ctrlChange(channel, data1, data2);\n        else if (cmd === 14) this.pitchWheel(channel, data2 * 128.0 + data1);\n        else this.port.postMessage({ data, type: \"midi\" });\n    }\n    metadata() {}\n    setParamValue(path: string, value: number) {\n        const e = { type: \"param\", data: { path, value } };\n        this.port.postMessage(e);\n        const param = this.parameters.get(path);\n        if (param) param.setValueAtTime(value, this.context.currentTime);\n    }\n    getParamValue(path: string) {\n        const param = this.parameters.get(path);\n        if (param) return param.value;\n        return null;\n    }\n    setOutputParamHandler(handler: (address: string, value: number) => any) {\n        this.outputHandler = handler;\n    }\n    getOutputParamHandler() {\n        return this.outputHandler;\n    }\n    getNumInputs() {\n        return this.dspMeta.inputs;\n    }\n    getNumOutputs() {\n        return this.dspMeta.outputs;\n    }\n    getParams() {\n        return this.inputsItems;\n    }\n    getJSON() {\n        if (this.voices) {\n            const o = this.dspMeta;\n            const e = this.effectMeta;\n            const r = { ...o };\n            if (e) {\n                r.ui = [{ type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ] }];\n            } else {\n                r.ui = [{ type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ] }];\n            }\n            return JSON.stringify(r);\n        }\n        return JSON.stringify(this.dspMeta);\n    }\n    getUI() {\n        if (this.voices) {\n            const o = this.dspMeta;\n            const e = this.effectMeta;\n            if (e) {\n                return [{ type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ] }];\n            }\n            return [{ type: \"tgroup\", label: \"Polyphonic\", items: [\n                { type: \"vgroup\", label: \"Voices\", items: o.ui }\n            ] }];\n        }\n        return this.dspMeta.ui;\n    }\n    destroy() {\n        this.port.postMessage({ type: \"destroy\" });\n        this.port.close();\n        delete this.plotHandler;\n        delete this.outputHandler;\n    }\n}\n","/* eslint-disable no-console */\n/* eslint-disable no-restricted-properties */\n/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable object-property-newline */\n/* eslint-env worker */\nimport { TDspMeta, FaustDspNode, TFaustUI, TFaustUIGroup, TFaustUIItem, FaustWebAssemblyExports, FaustWebAssemblyMixerExports, TCompiledDsp } from \"./types\";\n\n// AudioWorklet Globals\ndeclare class AudioWorkletProcessor {\n    public port: MessagePort;\n    public process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key: string]: Float32Array }): boolean;\n    constructor(options: AudioWorkletNodeOptions);\n}\ntype AudioWorkletProcessorConstructor<T extends AudioWorkletProcessor> = {\n    new (options: AudioWorkletNodeOptions): T;\n};\ndeclare function registerProcessor<T extends AudioWorkletProcessor>(name: string, constructor: AudioWorkletProcessorConstructor<T>): void;\ndeclare const currentFrame: number;\ndeclare const currentTime: number;\ndeclare const sampleRate: number;\ninterface AudioParamDescriptor {\n    automationRate?: AutomationRate;\n    defaultValue?: number;\n    maxValue?: number;\n    minValue?: number;\n    name: string;\n}\n\n// Injected by Faust\ntype FaustData = {\n    id: string;\n    voices: number;\n    dspMeta: TDspMeta;\n    effectMeta?: TDspMeta;\n};\ndeclare const faustData: FaustData;\n\ndeclare const remap: (v: number, mn0: number, mx0: number, mn1: number, mx1: number) => number;\ndeclare const midiToFreq: (v: number) => number;\ndeclare const findPath: (o: any, p: string) => boolean;\ndeclare const createWasmImport: (voices: number, memory: WebAssembly.Memory) => { [key: string]: any };\ndeclare const createWasmMemory: (voicesIn: number, dspMeta: TDspMeta, effectMeta: TDspMeta, bufferSize: number) => WebAssembly.Memory;\n\nexport const FaustAudioWorkletProcessorWrapper = () => {\n    class FaustConst {\n        static id = faustData.id;\n        static dspMeta = faustData.dspMeta;\n        static effectMeta = faustData.effectMeta;\n    }\n    class FaustAudioWorkletProcessor extends AudioWorkletProcessor implements FaustDspNode {\n        static bufferSize = 128;\n        // JSON parsing functions\n        static parseUI(ui: TFaustUI, obj: AudioParamDescriptor[] | FaustAudioWorkletProcessor, callback: (...args: any[]) => any) {\n            for (let i = 0; i < ui.length; i++) {\n                this.parseGroup(ui[i], obj, callback);\n            }\n        }\n        static parseGroup(group: TFaustUIGroup, obj: AudioParamDescriptor[] | FaustAudioWorkletProcessor, callback: (...args: any[]) => any) {\n            if (group.items) {\n                this.parseItems(group.items, obj, callback);\n            }\n        }\n        static parseItems(items: TFaustUIItem[], obj: AudioParamDescriptor[] | FaustAudioWorkletProcessor, callback: (...args: any[]) => any) {\n            for (let i = 0; i < items.length; i++) {\n                callback(items[i], obj, callback);\n            }\n        }\n        static parseItem(item: TFaustUIItem, obj: AudioParamDescriptor[], callback: (...args: any[]) => any) {\n            if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n                FaustAudioWorkletProcessor.parseItems(item.items, obj, callback); // callback may not binded to this\n            } else if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n                // Nothing\n            } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\n                if (!faustData.voices || (!item.address.endsWith(\"/gate\") && !item.address.endsWith(\"/freq\") && !item.address.endsWith(\"/gain\"))) {\n                    obj.push({ name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 });\n                }\n            } else if (item.type === \"button\" || item.type === \"checkbox\") {\n                if (!faustData.voices || (!item.address.endsWith(\"/gate\") && !item.address.endsWith(\"/freq\") && !item.address.endsWith(\"/gain\"))) {\n                    obj.push({ name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 });\n                }\n            }\n        }\n        static parseItem2(item: TFaustUIItem, obj: FaustAudioWorkletProcessor, callback: (...args: any[]) => any) {\n            if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n                FaustAudioWorkletProcessor.parseItems(item.items, obj, callback); // callback may not binded to this\n            } else if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n                // Keep bargraph adresses\n                obj.outputsItems.push(item.address);\n                obj.pathTable$[item.address] = item.index;\n            } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n                // Keep inputs adresses\n                obj.inputsItems.push(item.address);\n                obj.pathTable$[item.address] = item.index;\n                if (!item.meta) return;\n                item.meta.forEach((meta) => {\n                    const { midi } = meta;\n                    if (!midi) return;\n                    const strMidi = midi.trim();\n                    if (strMidi === \"pitchwheel\") {\n                        obj.fPitchwheelLabel.push({ path: item.address, min: item.min, max: item.max });\n                    } else {\n                        const matched = strMidi.match(/^ctrl\\s(\\d+)/);\n                        if (!matched) return;\n                        obj.fCtrlLabel[parseInt(matched[1])].push({ path: item.address, min: item.min, max: item.max });\n                    }\n                });\n            }\n        }\n        static get parameterDescriptors() {\n            // Analyse JSON to generate AudioParam parameters\n            const params = [] as AudioParamDescriptor[];\n            this.parseUI(FaustConst.dspMeta.ui, params, this.parseItem);\n            if (FaustConst.effectMeta) this.parseUI(FaustConst.effectMeta.ui, params, this.parseItem);\n            return params;\n        }\n        destroyed: boolean;\n        dspInstance: WebAssembly.Instance;\n        effectInstance?: WebAssembly.Instance;\n        mixerInstance?: WebAssembly.Instance;\n        memory?: WebAssembly.Memory;\n\n        bufferSize: number;\n        voices: number;\n        dspMeta: TDspMeta;\n        $ins: number;\n        $outs: number;\n        dspInChannnels: Float32Array[];\n        dspOutChannnels: Float32Array[];\n        fPitchwheelLabel: { path: string; min: number; max: number }[];\n        fCtrlLabel: { path: string; min: number; max: number }[][];\n        numIn: number;\n        numOut: number;\n        ptrSize: number;\n        sampleSize: number;\n        outputsTimer: number;\n        inputsItems: string[];\n        outputsItems: string[];\n        pathTable$: { [address: string]: number };\n        $audioHeap: number;\n        $$audioHeapInputs: number;\n        $$audioHeapOutputs: number;\n        $audioHeapInputs: number;\n        $audioHeapOutputs: number;\n        $dsp: number;\n        factory: FaustWebAssemblyExports;\n        HEAP: ArrayBuffer;\n        HEAP32: Int32Array;\n        HEAPF32: Float32Array;\n\n        effectMeta?: TDspMeta;\n        $effect?: number;\n        $mixing?: number;\n        fFreqLabel$?: number[];\n        fGateLabel$?: number[];\n        fGainLabel$?: number[];\n        fDate?: number;\n        $$audioHeapMixing?: number;\n        $audioHeapMixing?: number;\n        mixer?: FaustWebAssemblyMixerExports;\n        effect?: FaustWebAssemblyExports;\n        dspVoices$?: number[];\n        dspVoicesState?: number[];\n        dspVoicesLevel?: number[];\n        dspVoicesDate?: number[];\n        kActiveVoice?: number;\n        kFreeVoice?: number;\n        kReleaseVoice?: number;\n        kNoVoice?: number;\n\n        $buffer: number;\n        cachedEvents: { type: string; data: any }[];\n\n        outputHandler: (address: string, value: number) => any;\n        computeHandler: (bufferSize: number) => any;\n\n        handleMessage = (e: MessageEvent) => { // use arrow function for binding\n            const msg = e.data;\n            this.cachedEvents.push({ type: e.data.type, data: e.data.data });\n            switch (msg.type) {\n                // Generic MIDI message\n                case \"midi\": this.midiMessage(msg.data); break;\n                // Typed MIDI message\n                case \"keyOn\": this.keyOn(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"keyOff\": this.keyOff(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"ctrlChange\": this.ctrlChange(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"pitchWheel\": this.pitchWheel(msg.data[0], msg.data[1]); break;\n                // Generic data message\n                case \"param\": this.setParamValue(msg.data.path, msg.data.value); break;\n                // case \"patch\": this.onpatch(msg.data); break;\n                case \"destroy\": {\n                    this.port.close();\n                    this.destroyed = true;\n                    delete this.outputHandler;\n                    delete this.computeHandler;\n                    break;\n                }\n                default:\n            }\n        }\n        constructor(options: AudioWorkletNodeOptions) {\n            super(options);\n            const processorOptions: { id: string; voices: number; compiledDsp: TCompiledDsp; mixer32Module: WebAssembly.Module } = options.processorOptions;\n            this.instantiateWasm(processorOptions);\n            this.port.onmessage = this.handleMessage; // Naturally binded with arrow function property\n            this.destroyed = false;\n\n            this.bufferSize = 128;\n            this.voices = processorOptions.voices;\n            this.dspMeta = processorOptions.compiledDsp.dspMeta;\n\n            this.outputHandler = (path, value) => this.port.postMessage({ path, value, type: \"param\" });\n            this.computeHandler = null;\n\n            this.$ins = null;\n            this.$outs = null;\n\n            this.dspInChannnels = [];\n            this.dspOutChannnels = [];\n\n            this.fPitchwheelLabel = [];\n            this.fCtrlLabel = new Array(128).fill(null).map(() => []);\n\n            this.numIn = this.dspMeta.inputs;\n            this.numOut = this.dspMeta.outputs;\n\n            // Memory allocator\n            this.ptrSize = 4;\n            this.sampleSize = 4;\n\n            // Create the WASM instance\n            this.factory = this.dspInstance.exports as FaustWebAssemblyExports;\n            this.HEAP = this.voices ? this.memory.buffer : this.factory.memory.buffer;\n            this.HEAP32 = new Int32Array(this.HEAP);\n            this.HEAPF32 = new Float32Array(this.HEAP);\n\n            // console.log(this.HEAP);\n            // console.log(this.HEAP32);\n            // console.log(this.HEAPF32);\n\n            // bargraph\n            this.outputsTimer = 5;\n            this.outputsItems = [];\n\n            // input items\n            this.inputsItems = [];\n\n            // Start of HEAP index\n\n            // DSP is placed first with index 0. Audio buffer start at the end of DSP.\n            this.$audioHeap = this.voices ? 0 : this.dspMeta.size;\n\n            // Setup pointers offset\n            this.$$audioHeapInputs = this.$audioHeap;\n            this.$$audioHeapOutputs = this.$$audioHeapInputs + this.numIn * this.ptrSize;\n\n            // Setup buffer offset\n            this.$audioHeapInputs = this.$$audioHeapOutputs + (this.numOut * this.ptrSize);\n            this.$audioHeapOutputs = this.$audioHeapInputs + (this.numIn * this.bufferSize * this.sampleSize);\n            if (this.voices) {\n                this.$$audioHeapMixing = this.$$audioHeapOutputs + this.numOut * this.ptrSize;\n                // Setup buffer offset\n                this.$audioHeapInputs = this.$$audioHeapMixing + this.numOut * this.ptrSize;\n                this.$audioHeapOutputs = this.$audioHeapInputs + this.numIn * this.bufferSize * this.sampleSize;\n                this.$audioHeapMixing = this.$audioHeapOutputs + this.numOut * this.bufferSize * this.sampleSize;\n                this.$dsp = this.$audioHeapMixing + this.numOut * this.bufferSize * this.sampleSize;\n            } else {\n                this.$audioHeapInputs = this.$$audioHeapOutputs + this.numOut * this.ptrSize;\n                this.$audioHeapOutputs = this.$audioHeapInputs + this.numIn * this.bufferSize * this.sampleSize;\n                // Start of DSP memory : Mono DSP is placed first with index 0\n                this.$dsp = 0;\n            }\n\n            if (this.voices) {\n                this.effectMeta = FaustConst.effectMeta;\n                this.$mixing = null;\n                this.fFreqLabel$ = [];\n                this.fGateLabel$ = [];\n                this.fGainLabel$ = [];\n                this.fDate = 0;\n\n                this.mixer = this.mixerInstance.exports as FaustWebAssemblyMixerExports;\n                this.effect = this.effectInstance ? this.effectInstance.exports as FaustWebAssemblyExports : null;\n\n                // Start of DSP memory ('polyphony' DSP voices)\n                this.dspVoices$ = [];\n                this.dspVoicesState = [];\n                this.dspVoicesLevel = [];\n                this.dspVoicesDate = [];\n\n                this.kActiveVoice = 0;\n                this.kFreeVoice = -1;\n                this.kReleaseVoice = -2;\n                this.kNoVoice = -3;\n\n                for (let i = 0; i < this.voices; i++) {\n                    this.dspVoices$[i] = this.$dsp + i * this.dspMeta.size;\n                    this.dspVoicesState[i] = this.kFreeVoice;\n                    this.dspVoicesLevel[i] = 0;\n                    this.dspVoicesDate[i] = 0;\n                }\n                // Effect memory starts after last voice\n                this.$effect = this.dspVoices$[this.voices - 1] + this.dspMeta.size;\n            }\n\n            this.pathTable$ = {};\n\n            this.$buffer = 0;\n            this.cachedEvents = [];\n\n            // Init resulting DSP\n            this.setup();\n        }\n        instantiateWasm(options: { id: string; voices: number; compiledDsp: TCompiledDsp; mixer32Module: WebAssembly.Module }) {\n            const memory = createWasmMemory(options.voices, options.compiledDsp.dspMeta, options.compiledDsp.effectMeta, 128);\n            this.memory = memory;\n            const imports = createWasmImport(options.voices, memory);\n            this.dspInstance = new WebAssembly.Instance(options.compiledDsp.dspModule, imports);\n            if (options.compiledDsp.effectModule) {\n                this.effectInstance = new WebAssembly.Instance(options.compiledDsp.effectModule, imports);\n            }\n            if (options.voices) {\n                const mixerImports = { imports: { print: console.log }, memory: { memory } };\n                this.mixerInstance = new WebAssembly.Instance(options.mixer32Module, mixerImports);\n            }\n        }\n        updateOutputs() {\n            if (this.outputsItems.length > 0 && this.outputHandler && this.outputsTimer-- === 0) {\n                this.outputsTimer = 5;\n                this.outputsItems.forEach(item => this.outputHandler(item, this.factory.getParamValue(this.$dsp, this.pathTable$[item])));\n            }\n        }\n\n        parseUI(ui: TFaustUI) {\n            return FaustAudioWorkletProcessor.parseUI(ui, this, FaustAudioWorkletProcessor.parseItem2);\n        }\n        parseGroup(group: TFaustUIGroup) {\n            return FaustAudioWorkletProcessor.parseGroup(group, this, FaustAudioWorkletProcessor.parseItem2);\n        }\n        parseItems(items: TFaustUIItem[]) {\n            return FaustAudioWorkletProcessor.parseItems(items, this, FaustAudioWorkletProcessor.parseItem2);\n        }\n        parseItem(item: TFaustUIItem) {\n            return FaustAudioWorkletProcessor.parseItem2(item, this, FaustAudioWorkletProcessor.parseItem2);\n        }\n\n        setParamValue(path: string, val: number) {\n            if (this.voices) {\n                if (this.effect && findPath(this.effectMeta.ui, path)) this.effect.setParamValue(this.$effect, this.pathTable$[path], val);\n                else this.dspVoices$.forEach($voice => this.factory.setParamValue($voice, this.pathTable$[path], val));\n            } else {\n                this.factory.setParamValue(this.$dsp, this.pathTable$[path], val);\n            }\n        }\n        getParamValue(path: string) {\n            if (this.voices) {\n                if (this.effect && findPath(this.effectMeta.ui, path)) return this.effect.getParamValue(this.$effect, this.pathTable$[path]);\n                return this.factory.getParamValue(this.dspVoices$[0], this.pathTable$[path]);\n            }\n            return this.factory.getParamValue(this.$dsp, this.pathTable$[path]);\n        }\n        setup() {\n            if (this.numIn > 0) {\n                this.$ins = this.$$audioHeapInputs;\n                for (let i = 0; i < this.numIn; i++) {\n                    this.HEAP32[(this.$ins >> 2) + i] = this.$audioHeapInputs + this.bufferSize * this.sampleSize * i;\n                }\n                // Prepare Ins buffer tables\n                const dspInChans = this.HEAP32.subarray(this.$ins >> 2, (this.$ins + this.numIn * this.ptrSize) >> 2);\n                for (let i = 0; i < this.numIn; i++) {\n                    this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + this.bufferSize * this.sampleSize) >> 2);\n                }\n            }\n            if (this.numOut > 0) {\n                this.$outs = this.$$audioHeapOutputs;\n                if (this.voices) this.$mixing = this.$$audioHeapMixing;\n                for (let i = 0; i < this.numOut; i++) {\n                    this.HEAP32[(this.$outs >> 2) + i] = this.$audioHeapOutputs + this.bufferSize * this.sampleSize * i;\n                    if (this.voices) this.HEAP32[(this.$mixing >> 2) + i] = this.$audioHeapMixing + this.bufferSize * this.sampleSize * i;\n                }\n                // Prepare Out buffer tables\n                const dspOutChans = this.HEAP32.subarray(this.$outs >> 2, (this.$outs + this.numOut * this.ptrSize) >> 2);\n                for (let i = 0; i < this.numOut; i++) {\n                    this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + this.bufferSize * this.sampleSize) >> 2);\n                }\n            }\n            // Parse UI\n            this.parseUI(this.dspMeta.ui);\n            if (this.effect) this.parseUI(this.effectMeta.ui);\n\n            // keep 'keyOn/keyOff' labels\n            if (this.voices) {\n                this.inputsItems.forEach((item) => {\n                    if (item.endsWith(\"/gate\")) this.fGateLabel$.push(this.pathTable$[item]);\n                    else if (item.endsWith(\"/freq\")) this.fFreqLabel$.push(this.pathTable$[item]);\n                    else if (item.endsWith(\"/gain\")) this.fGainLabel$.push(this.pathTable$[item]);\n                });\n                // Init DSP voices\n                this.dspVoices$.forEach($voice => this.factory.init($voice, sampleRate));\n                // Init effect\n                if (this.effect) this.effect.init(this.$effect, sampleRate);\n            } else {\n                // Init DSP\n                this.factory.init(this.$dsp, sampleRate); // 'sampleRate' is defined in AudioWorkletGlobalScope\n            }\n        }\n        // Poly only methods\n        getPlayingVoice(pitch: number) {\n            if (!this.voices) return null;\n            let voice = this.kNoVoice;\n            let oldestDatePlaying = Number.MAX_VALUE;\n            for (let i = 0; i < this.voices; i++) {\n                if (this.dspVoicesState[i] === pitch) {\n                    // Keeps oldest playing voice\n                    if (this.dspVoicesDate[i] < oldestDatePlaying) {\n                        oldestDatePlaying = this.dspVoicesDate[i];\n                        voice = i;\n                    }\n                }\n            }\n            return voice;\n        }\n        allocVoice(voice: number) {\n            if (!this.voices) return null;\n            // so that envelop is always re-initialized\n            this.factory.instanceClear(this.dspVoices$[voice]);\n            this.dspVoicesDate[voice] = this.fDate++;\n            this.dspVoicesState[voice] = this.kActiveVoice;\n            return voice;\n        }\n        getFreeVoice() {\n            if (!this.voices) return null;\n            for (let i = 0; i < this.voices; i++) {\n                if (this.dspVoicesState[i] === this.kFreeVoice) return this.allocVoice(i);\n            }\n            let voiceRelease = this.kNoVoice;\n            let voicePlaying = this.kNoVoice;\n            let oldestDateRelease = Number.MAX_VALUE;\n            let oldestDatePlaying = Number.MAX_VALUE;\n            for (let i = 0; i < this.voices; i++) { // Scan all voices\n                // Try to steal a voice in kReleaseVoice mode...\n                if (this.dspVoicesState[i] === this.kReleaseVoice) {\n                    // Keeps oldest release voice\n                    if (this.dspVoicesDate[i] < oldestDateRelease) {\n                        oldestDateRelease = this.dspVoicesDate[i];\n                        voiceRelease = i;\n                    }\n                } else if (this.dspVoicesDate[i] < oldestDatePlaying) {\n                    oldestDatePlaying = this.dspVoicesDate[i];\n                    voicePlaying = i;\n                }\n            }\n            // Then decide which one to steal\n            if (oldestDateRelease !== Number.MAX_VALUE) {\n                // console.log(`Steal release voice : voice_date = ${this.dspVoicesDate[voiceRelease]} cur_date = ${this.fDate} voice = ${voiceRelease}`);\n                return this.allocVoice(voiceRelease);\n            }\n            if (oldestDatePlaying !== Number.MAX_VALUE) {\n                // console.log(`Steal playing voice : voice_date = ${this.dspVoicesDate[voicePlaying]} cur_date = ${this.fDate} voice = ${voicePlaying}`);\n                return this.allocVoice(voicePlaying);\n            }\n            return this.kNoVoice;\n        }\n        keyOn(channel: number, pitch: number, velocity: number) {\n            if (!this.voices) return;\n            const voice = this.getFreeVoice();\n            // console.log(\"keyOn voice \" + voice);\n            this.fFreqLabel$.forEach($ => this.factory.setParamValue(this.dspVoices$[voice], $, midiToFreq(pitch)));\n            this.fGateLabel$.forEach($ => this.factory.setParamValue(this.dspVoices$[voice], $, 1));\n            this.fGainLabel$.forEach($ => this.factory.setParamValue(this.dspVoices$[voice], $, velocity / 127));\n            this.dspVoicesState[voice] = pitch;\n        }\n        keyOff(channel: number, pitch: number, velocity: number) {\n            if (!this.voices) return;\n            const voice = this.getPlayingVoice(pitch);\n            if (voice === this.kNoVoice) return; // console.log(\"Playing voice not found...\");\n            // console.log(\"keyOff voice \" + voice);\n            this.fGateLabel$.forEach($ => this.factory.setParamValue(this.dspVoices$[voice], $, 0)); // No use of velocity for now...\n            this.dspVoicesState[voice] = this.kReleaseVoice; // Release voice\n        }\n        allNotesOff() {\n            if (!this.voices) return;\n            for (let i = 0; i < this.voices; i++) {\n                this.fGateLabel$.forEach($gate => this.factory.setParamValue(this.dspVoices$[i], $gate, 0));\n                this.dspVoicesState[i] = this.kReleaseVoice;\n            }\n        }\n\n        midiMessage(data: number[] | Uint8Array) {\n            const cmd = data[0] >> 4;\n            const channel = data[0] & 0xf;\n            const data1 = data[1];\n            const data2 = data[2];\n            if (channel === 9) return;\n            if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyOff(channel, data1, data2);\n            else if (cmd === 9) this.keyOn(channel, data1, data2);\n            else if (cmd === 11) this.ctrlChange(channel, data1, data2);\n            else if (cmd === 14) this.pitchWheel(channel, data2 * 128.0 + data1);\n        }\n        ctrlChange(channel: number, ctrl: number, value: number) {\n            if (!this.fCtrlLabel[ctrl].length) return;\n            this.fCtrlLabel[ctrl].forEach((ctrl) => {\n                const { path } = ctrl;\n                this.setParamValue(path, remap(value, 0, 127, ctrl.min, ctrl.max));\n                if (this.outputHandler) this.outputHandler(path, this.getParamValue(path));\n            });\n        }\n        pitchWheel(channel: number, wheel: number) {\n            this.fPitchwheelLabel.forEach((pw) => {\n                this.setParamValue(pw.path, remap(wheel, 0, 16383, pw.min, pw.max));\n                if (this.outputHandler) this.outputHandler(pw.path, this.getParamValue(pw.path));\n            });\n        }\n        process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key: string]: Float32Array }) {\n            if (this.destroyed) return false;\n            const input = inputs[0];\n            const output = outputs[0];\n            // Check inputs\n            if (this.numIn > 0 && (!input || !input[0] || input[0].length === 0)) {\n                // console.log(\"Process input error\");\n                return true;\n            }\n            // Check outputs\n            if (this.numOut > 0 && (!output || !output[0] || output[0].length === 0)) {\n                // console.log(\"Process output error\");\n                return true;\n            }\n            // Copy inputs\n            if (input !== undefined) {\n                for (let chan = 0; chan < Math.min(this.numIn, input.length); ++chan) {\n                    const dspInput = this.dspInChannnels[chan];\n                    dspInput.set(input[chan]);\n                }\n            }\n            // Update controls (possibly needed for sample accurate control)\n            for (const path in parameters) {\n                const paramArray = parameters[path];\n                this.setParamValue(path, paramArray[0]);\n            }\n            // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)\n            if (this.computeHandler) this.computeHandler(this.bufferSize);\n            if (this.voices) {\n                this.mixer.clearOutput(this.bufferSize, this.numOut, this.$outs); // First clear the outputs\n                for (let i = 0; i < this.voices; i++) { // Compute all running voices\n                    this.factory.compute(this.dspVoices$[i], this.bufferSize, this.$ins, this.$mixing); // Compute voice\n                    this.mixer.mixVoice(this.bufferSize, this.numOut, this.$mixing, this.$outs); // Mix it in result\n                }\n                if (this.effect) this.effect.compute(this.$effect, this.bufferSize, this.$outs, this.$outs); // Apply effect. Not a typo, effect is applied on the outs.\n            } else {\n                this.factory.compute(this.$dsp, this.bufferSize, this.$ins, this.$outs); // Compute\n            }\n            // Update bargraph\n            this.updateOutputs();\n            // Copy outputs\n            if (output !== undefined) {\n                for (let i = 0; i < Math.min(this.numOut, output.length); i++) {\n                    const dspOutput = this.dspOutChannnels[i];\n                    output[i].set(dspOutput);\n                }\n                this.port.postMessage({ type: \"plot\", value: output, index: this.$buffer++, events: this.cachedEvents });\n                this.cachedEvents = [];\n            }\n            return true;\n        }\n        printMemory() {\n            console.log(\"============== Memory layout ==============\");\n            console.log(\"dspMeta.size: \" + this.dspMeta.size);\n            console.log(\"$audioHeap: \" + this.$audioHeap);\n            console.log(\"$$audioHeapInputs: \" + this.$$audioHeapInputs);\n            console.log(\"$$audioHeapOutputs: \" + this.$$audioHeapOutputs);\n            console.log(\"$$audioHeapMixing: \" + this.$$audioHeapMixing);\n            console.log(\"$audioHeapInputs: \" + this.$audioHeapInputs);\n            console.log(\"$audioHeapOutputs: \" + this.$audioHeapOutputs);\n            console.log(\"$audioHeapMixing: \" + this.$audioHeapMixing);\n            console.log(\"$dsp: \" + this.$dsp);\n            if (this.dspVoices$) this.dspVoices$.forEach(($voice, i) => console.log(\"dspVoices$[\" + i + \"]: \" + $voice));\n            console.log(\"$effect: \" + this.$effect);\n            console.log(\"$mixing: \" + this.$mixing);\n        }\n    }\n\n    // Globals\n    // Synchronously compile and instantiate the WASM module\n    registerProcessor(FaustConst.id || \"mydsp\", FaustAudioWorkletProcessor);\n};\n","/* eslint-disable no-restricted-properties */\n/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable object-property-newline */\nimport { TDspMeta, FaustWebAssemblyExports, TCompiledDsp } from \"./types\";\n\nexport class FaustOfflineProcessor {\n    private bufferSize = 1024;\n    private sampleRate: number;\n    private dspMeta: TDspMeta;\n    private $ins: number;\n    private $outs: number;\n    private dspInChannnels: Float32Array[];\n    private dspOutChannnels: Float32Array[];\n    private numIn: number;\n    private numOut: number;\n    private ptrSize: number;\n    private sampleSize: number;\n    private $audioHeap: number;\n    private $$audioHeapInputs: number;\n    private $$audioHeapOutputs: number;\n    private $audioHeapInputs: number;\n    private $audioHeapOutputs: number;\n    private $dsp: number;\n    private factory: FaustWebAssemblyExports;\n    private HEAP: ArrayBuffer;\n    private HEAP32: Int32Array;\n    private HEAPF32: Float32Array;\n    private output: Float32Array[];\n\n    static get importObject() {\n        return {\n            env: {\n                memory: undefined as WebAssembly.Memory, memoryBase: 0, tableBase: 0,\n                _abs: Math.abs,\n                // Float version\n                _acosf: Math.acos, _asinf: Math.asin, _atanf: Math.atan, _atan2f: Math.atan2,\n                _ceilf: Math.ceil, _cosf: Math.cos, _expf: Math.exp, _floorf: Math.floor,\n                _fmodf: (x: number, y: number) => x % y,\n                _logf: Math.log, _log10f: Math.log10, _max_f: Math.max, _min_f: Math.min,\n                _remainderf: (x: number, y: number) => x - Math.round(x / y) * y,\n                _powf: Math.pow, _roundf: Math.fround, _sinf: Math.sin, _sqrtf: Math.sqrt, _tanf: Math.tan,\n                _acoshf: Math.acosh, _asinhf: Math.asinh, _atanhf: Math.atanh,\n                _coshf: Math.cosh, _sinhf: Math.sinh, _tanhf: Math.tanh,\n                // Double version\n                _acos: Math.acos, _asin: Math.asin, _atan: Math.atan, _atan2: Math.atan2,\n                _ceil: Math.ceil, _cos: Math.cos, _exp: Math.exp, _floor: Math.floor,\n                _fmod: (x: number, y: number) => x % y,\n                _log: Math.log, _log10: Math.log10, _max_: Math.max, _min_: Math.min,\n                _remainder: (x: number, y: number) => x - Math.round(x / y) * y,\n                _pow: Math.pow, _round: Math.fround, _sin: Math.sin, _sqrt: Math.sqrt, _tan: Math.tan,\n                _acosh: Math.acosh, _asinh: Math.asinh, _atanh: Math.atanh,\n                _cosh: Math.cosh, _sinh: Math.sinh, _tanh: Math.tanh,\n                table: new WebAssembly.Table({ initial: 0, element: \"anyfunc\" })\n            }\n        };\n    }\n    async init(options: { compiledDsp?: TCompiledDsp; sampleRate?: number }) {\n        const { compiledDsp } = options;\n        if (!compiledDsp) throw new Error(\"No Dsp input\");\n\n        this.dspMeta = compiledDsp.dspMeta;\n\n        this.$ins = null;\n        this.$outs = null;\n\n        this.dspInChannnels = [];\n        this.dspOutChannnels = [];\n\n        this.numIn = this.dspMeta.inputs;\n        this.numOut = this.dspMeta.outputs;\n        // Memory allocator\n        this.ptrSize = 4;\n        this.sampleSize = 4;\n\n        // Create the WASM instance\n        const dspInstance = await WebAssembly.instantiate(compiledDsp.dspModule, FaustOfflineProcessor.importObject);\n        this.factory = dspInstance.exports as FaustWebAssemblyExports;\n        this.HEAP = this.factory.memory.buffer;\n        this.HEAP32 = new Int32Array(this.HEAP);\n        this.HEAPF32 = new Float32Array(this.HEAP);\n\n        this.output = new Array(this.numOut).fill(null).map(() => new Float32Array(this.bufferSize));\n    }\n    setup(options?: { sampleRate?: number }) {\n        if (!this.dspMeta) throw new Error(\"No Dsp\");\n        this.sampleRate = options && options.sampleRate || 48000;\n\n        // DSP is placed first with index 0. Audio buffer start at the end of DSP.\n        this.$audioHeap = this.dspMeta.size;\n\n        // Setup pointers offset\n        this.$$audioHeapInputs = this.$audioHeap;\n        this.$$audioHeapOutputs = this.$$audioHeapInputs + this.numIn * this.ptrSize;\n\n        // Setup buffer offset\n        this.$audioHeapInputs = this.$$audioHeapOutputs + (this.numOut * this.ptrSize);\n        this.$audioHeapOutputs = this.$audioHeapInputs + (this.numIn * this.bufferSize * this.sampleSize);\n        // Start of DSP memory : Mono DSP is placed first with index 0\n        this.$dsp = 0;\n\n        if (this.numIn > 0) {\n            this.$ins = this.$$audioHeapInputs;\n            for (let i = 0; i < this.numIn; i++) {\n                this.HEAP32[(this.$ins >> 2) + i] = this.$audioHeapInputs + this.bufferSize * this.sampleSize * i;\n            }\n            // Prepare Ins buffer tables\n            const dspInChans = this.HEAP32.subarray(this.$ins >> 2, (this.$ins + this.numIn * this.ptrSize) >> 2);\n            for (let i = 0; i < this.numIn; i++) {\n                this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + this.bufferSize * this.sampleSize) >> 2);\n            }\n        }\n        if (this.numOut > 0) {\n            this.$outs = this.$$audioHeapOutputs;\n            for (let i = 0; i < this.numOut; i++) {\n                this.HEAP32[(this.$outs >> 2) + i] = this.$audioHeapOutputs + this.bufferSize * this.sampleSize * i;\n            }\n            // Prepare Out buffer tables\n            const dspOutChans = this.HEAP32.subarray(this.$outs >> 2, (this.$outs + this.numOut * this.ptrSize) >> 2);\n            for (let i = 0; i < this.numOut; i++) {\n                this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + this.bufferSize * this.sampleSize) >> 2);\n            }\n        }\n        // Init DSP\n        this.factory.init(this.$dsp, this.sampleRate);\n    }\n    compute() {\n        if (!this.factory) return this.output;\n        for (let i = 0; i < this.numIn; i++) {\n            this.dspInChannnels[i].fill(0);\n        }\n        this.factory.compute(this.$dsp, this.bufferSize, this.$ins, this.$outs); // Compute\n        // Copy outputs\n        if (this.output !== undefined) {\n            for (let i = 0; i < this.numOut; i++) {\n                this.output[i].set(this.dspOutChannnels[i]);\n            }\n        }\n        return this.output;\n    }\n    async plot(options?: { compiledDsp?: TCompiledDsp; size?: number; sampleRate?: number }) {\n        if (options && options.compiledDsp) await this.init(options);\n        this.setup(options);\n        const size = options && options.size || 128;\n        const plotted = new Array(this.numOut).fill(null).map(() => new Float32Array(size));\n        for (let i = 0; i < size; i += this.bufferSize) {\n            const computed = this.compute();\n            for (let j = 0; j < plotted.length; j++) {\n                plotted[j].set(size - i > this.bufferSize ? computed[j] : computed[j].subarray(0, size - i), i);\n            }\n        }\n        return plotted;\n    }\n}\n","/* eslint-disable no-restricted-properties */\n/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable object-property-newline */\n/* eslint-disable object-curly-newline */\nimport { Faust } from \"./Faust\";\nimport { mixer32Module, createWasmMemory, createWasmImport, midiToFreq, remap } from \"./utils\";\nimport { TCompiledDsp, FaustScriptProcessorNode, TAudioNodeOptions, FaustWebAssemblyMixerExports, FaustWebAssemblyExports } from \"./types\";\n\nexport class FaustWasmToScriptProcessor {\n    faust: Faust;\n    constructor(faust: Faust) {\n        this.faust = faust;\n    }\n    private initNode(compiledDsp: TCompiledDsp, dspInstance: WebAssembly.Instance, effectInstance: WebAssembly.Instance, mixerInstance: WebAssembly.Instance, audioCtx: AudioContext, bufferSize?: number, memory?: WebAssembly.Memory, voices?: number, plotHandler?: (plotted: Float32Array[], index: number, events?: { type: string; data: any }[]) => any) {\n        let node: FaustScriptProcessorNode;\n        const dspMeta = compiledDsp.dspMeta;\n        const inputs = dspMeta.inputs;\n        const outputs = dspMeta.outputs;\n        try {\n            node = audioCtx.createScriptProcessor(bufferSize, inputs, outputs) as FaustScriptProcessorNode;\n        } catch (e) {\n            this.faust.error(\"Error in createScriptProcessor: \" + e.message);\n            throw e;\n        }\n        node.destroyed = false;\n        node.voices = voices;\n        node.dspMeta = dspMeta;\n\n        node.outputHandler = null;\n        node.computeHandler = null;\n        node.$ins = null;\n        node.$outs = null;\n\n        node.dspInChannnels = [];\n        node.dspOutChannnels = [];\n\n        node.fPitchwheelLabel = [];\n        node.fCtrlLabel = new Array(128).fill(null).map(() => []);\n\n        node.numIn = inputs;\n        node.numOut = outputs;\n\n        this.faust.log(node.numIn);\n        this.faust.log(node.numOut);\n\n        // Memory allocator\n        node.ptrSize = 4;\n        node.sampleSize = 4;\n\n        node.factory = dspInstance.exports as FaustWebAssemblyExports;\n        node.HEAP = node.voices ? memory.buffer : node.factory.memory.buffer;\n        node.HEAP32 = new Int32Array(node.HEAP);\n        node.HEAPF32 = new Float32Array(node.HEAP);\n\n        this.faust.log(node.HEAP);\n        this.faust.log(node.HEAP32);\n        this.faust.log(node.HEAPF32);\n\n        // JSON is as offset 0\n        /*\n        var HEAPU8 = new Uint8Array(sp.HEAP);\n        console.log(this.Heap2Str(HEAPU8));\n        */\n        // bargraph\n        node.outputsTimer = 5;\n        node.outputsItems = [];\n\n        // input items\n        node.inputsItems = [];\n\n        // Start of HEAP index\n\n        // DSP is placed first with index 0. Audio buffer start at the end of DSP.\n        node.$audioHeap = node.voices ? 0 : node.dspMeta.size;\n\n        // Setup pointers offset\n        node.$$audioHeapInputs = node.$audioHeap;\n        node.$$audioHeapOutputs = node.$$audioHeapInputs + node.numIn * node.ptrSize;\n        if (node.voices) {\n            node.$$audioHeapMixing = node.$$audioHeapOutputs + node.numOut * node.ptrSize;\n            // Setup buffer offset\n            node.$audioHeapInputs = node.$$audioHeapMixing + node.numOut * node.ptrSize;\n            node.$audioHeapOutputs = node.$audioHeapInputs + node.numIn * node.bufferSize * node.sampleSize;\n            node.$audioHeapMixing = node.$audioHeapOutputs + node.numOut * node.bufferSize * node.sampleSize;\n            node.$dsp = node.$audioHeapMixing + node.numOut * node.bufferSize * node.sampleSize;\n        } else {\n            node.$audioHeapInputs = node.$$audioHeapOutputs + node.numOut * node.ptrSize;\n            node.$audioHeapOutputs = node.$audioHeapInputs + node.numIn * node.bufferSize * node.sampleSize;\n            // Start of DSP memory : Mono DSP is placed first with index 0\n            node.$dsp = 0;\n        }\n\n        if (node.voices) {\n            node.effectMeta = compiledDsp.effectMeta;\n            node.$mixing = null;\n            node.fFreqLabel$ = [];\n            node.fGateLabel$ = [];\n            node.fGainLabel$ = [];\n            node.fDate = 0;\n\n            node.mixer = mixerInstance.exports as FaustWebAssemblyMixerExports;\n            node.effect = effectInstance ? effectInstance.exports as FaustWebAssemblyExports : null;\n            this.faust.log(node.mixer);\n            this.faust.log(node.factory);\n            this.faust.log(node.effect);\n            // Start of DSP memory ('polyphony' DSP voices)\n            node.dspVoices$ = [];\n            node.dspVoicesState = [];\n            node.dspVoicesLevel = [];\n            node.dspVoicesDate = [];\n\n            node.kActiveVoice = 0;\n            node.kFreeVoice = -1;\n            node.kReleaseVoice = -2;\n            node.kNoVoice = -3;\n\n            for (let i = 0; i < node.voices; i++) {\n                node.dspVoices$[i] = node.$dsp + i * node.dspMeta.size;\n                node.dspVoicesState[i] = node.kFreeVoice;\n                node.dspVoicesLevel[i] = 0;\n                node.dspVoicesDate[i] = 0;\n            }\n            // Effect memory starts after last voice\n            node.$effect = node.dspVoices$[node.voices - 1] + node.dspMeta.size;\n        }\n\n        node.pathTable$ = {};\n\n        node.$buffer = 0;\n        node.cachedEvents = [];\n        node.plotHandler = plotHandler;\n\n        node.updateOutputs = () => {\n            if (node.outputsItems.length > 0 && node.outputHandler && node.outputsTimer-- === 0) {\n                node.outputsTimer = 5;\n                node.outputsItems.forEach(item => node.outputHandler(item, node.factory.getParamValue(node.$dsp, node.pathTable$[item])));\n            }\n        };\n\n        // JSON parsing\n        node.parseUI = ui => ui.forEach(group => node.parseGroup(group));\n        node.parseGroup = group => (group.items ? node.parseItems(group.items) : null);\n        node.parseItems = items => items.forEach(item => node.parseItem(item));\n        node.parseItem = (item) => {\n            if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n                node.parseItems(item.items);\n            } else if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n                // Keep bargraph adresses\n                node.outputsItems.push(item.address);\n                node.pathTable$[item.address] = item.index;\n            } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n                // Keep inputs adresses\n                node.inputsItems.push(item.address);\n                node.pathTable$[item.address] = item.index;\n                if (!item.meta) return;\n                item.meta.forEach((meta) => {\n                    const { midi } = meta;\n                    if (!midi) return;\n                    const strMidi = midi.trim();\n                    if (strMidi === \"pitchwheel\") {\n                        node.fPitchwheelLabel.push({ path: item.address, min: item.min, max: item.max });\n                    } else {\n                        const matched = strMidi.match(/^ctrl\\s(\\d+)/);\n                        if (!matched) return;\n                        node.fCtrlLabel[parseInt(matched[1])].push({ path: item.address, min: item.min, max: item.max });\n                    }\n                });\n            }\n        };\n\n        if (node.voices) {\n            node.getPlayingVoice = (pitch) => {\n                let voice = node.kNoVoice;\n                let oldestDatePlaying = Number.MAX_VALUE;\n                for (let i = 0; i < node.voices; i++) {\n                    if (node.dspVoicesState[i] === pitch) {\n                        // Keeps oldest playing voice\n                        if (node.dspVoicesDate[i] < oldestDatePlaying) {\n                            oldestDatePlaying = node.dspVoicesDate[i];\n                            voice = i;\n                        }\n                    }\n                }\n                return voice;\n            };\n            // Always returns a voice\n            node.allocVoice = (voice) => {\n                // so that envelop is always re-initialized\n                node.factory.instanceClear(node.dspVoices$[voice]);\n                node.dspVoicesDate[voice] = node.fDate++;\n                node.dspVoicesState[voice] = node.kActiveVoice;\n                return voice;\n            };\n            node.getFreeVoice = () => {\n                for (let i = 0; i < node.voices; i++) {\n                    if (node.dspVoicesState[i] === node.kFreeVoice) return node.allocVoice(i);\n                }\n                let voiceRelease = node.kNoVoice;\n                let voicePlaying = node.kNoVoice;\n                let oldestDateRelease = Number.MAX_VALUE;\n                let oldestDatePlaying = Number.MAX_VALUE;\n                for (let i = 0; i < node.voices; i++) { // Scan all voices\n                    // Try to steal a voice in kReleaseVoice mode...\n                    if (node.dspVoicesState[i] === node.kReleaseVoice) {\n                        // Keeps oldest release voice\n                        if (node.dspVoicesDate[i] < oldestDateRelease) {\n                            oldestDateRelease = node.dspVoicesDate[i];\n                            voiceRelease = i;\n                        }\n                    } else if (node.dspVoicesDate[i] < oldestDatePlaying) {\n                        oldestDatePlaying = node.dspVoicesDate[i];\n                        voicePlaying = i;\n                    }\n                }\n                // Then decide which one to steal\n                if (oldestDateRelease !== Number.MAX_VALUE) {\n                    this.faust.log(`Steal release voice : voice_date = ${node.dspVoicesDate[voiceRelease]} cur_date = ${node.fDate} voice = ${voiceRelease}`);\n                    return node.allocVoice(voiceRelease);\n                }\n                if (oldestDatePlaying !== Number.MAX_VALUE) {\n                    this.faust.log(`Steal playing voice : voice_date = ${node.dspVoicesDate[voicePlaying]} cur_date = ${node.fDate} voice = ${voicePlaying}`);\n                    return node.allocVoice(voicePlaying);\n                }\n                return node.kNoVoice;\n            };\n            node.keyOn = (channel, pitch, velocity) => {\n                node.cachedEvents.push({ type: \"keyOn\", data: [channel, pitch, velocity] });\n                const voice = node.getFreeVoice();\n                this.faust.log(\"keyOn voice \" + voice);\n                node.fFreqLabel$.forEach($ => node.factory.setParamValue(node.dspVoices$[voice], $, midiToFreq(pitch)));\n                node.fGateLabel$.forEach($ => node.factory.setParamValue(node.dspVoices$[voice], $, 1));\n                node.fGainLabel$.forEach($ => node.factory.setParamValue(node.dspVoices$[voice], $, velocity / 127));\n                node.dspVoicesState[voice] = pitch;\n            };\n            node.keyOff = (channel, pitch, velocity) => { // eslint-disable-line @typescript-eslint/no-unused-vars\n                node.cachedEvents.push({ type: \"keyOff\", data: [channel, pitch, velocity] });\n                const voice = node.getPlayingVoice(pitch);\n                if (voice === node.kNoVoice) return this.faust.log(\"Playing voice not found...\");\n                node.fGateLabel$.forEach($ => node.factory.setParamValue(node.dspVoices$[voice], $, 0)); // No use of velocity for now...\n                node.dspVoicesState[voice] = node.kReleaseVoice; // Release voice\n                return this.faust.log(\"keyOff voice \" + voice);\n            };\n            node.allNotesOff = () => {\n                node.cachedEvents.push({ type: \"ctrlChange\", data: [0, 123, 0] });\n                for (let i = 0; i < node.voices; i++) {\n                    node.fGateLabel$.forEach($gate => node.factory.setParamValue(node.dspVoices$[i], $gate, 0));\n                    node.dspVoicesState[i] = node.kReleaseVoice;\n                }\n            };\n        }\n        node.midiMessage = (data) => {\n            node.cachedEvents.push({ data, type: \"midi\" });\n            const cmd = data[0] >> 4;\n            const channel = data[0] & 0xf;\n            const data1 = data[1];\n            const data2 = data[2];\n            if (channel === 9) return undefined;\n            if (node.voices) {\n                if (cmd === 8 || (cmd === 9 && data2 === 0)) return node.keyOff(channel, data1, data2);\n                if (cmd === 9) return node.keyOn(channel, data1, data2);\n            }\n            if (cmd === 11) return node.ctrlChange(channel, data1, data2);\n            if (cmd === 14) return node.pitchWheel(channel, (data2 * 128.0 + data1));\n            return undefined;\n        };\n        node.ctrlChange = (channel, ctrl, value) => {\n            node.cachedEvents.push({ type: \"ctrlChange\", data: [channel, ctrl, value] });\n            if (!node.fCtrlLabel[ctrl].length) return;\n            node.fCtrlLabel[ctrl].forEach((ctrl) => {\n                const { path } = ctrl;\n                node.setParamValue(path, remap(value, 0, 127, ctrl.min, ctrl.max));\n                if (node.outputHandler) node.outputHandler(path, node.getParamValue(path));\n            });\n        };\n        node.pitchWheel = (channel, wheel) => {\n            node.cachedEvents.push({ type: \"pitchWheel\", data: [channel, wheel] });\n            node.fPitchwheelLabel.forEach((pw) => {\n                node.setParamValue(pw.path, remap(wheel, 0, 16383, pw.min, pw.max));\n                if (node.outputHandler) node.outputHandler(pw.path, node.getParamValue(pw.path));\n            });\n        };\n        node.compute = (e) => {\n            if (node.destroyed) return false;\n            for (let i = 0; i < node.numIn; i++) { // Read inputs\n                const input = e.inputBuffer.getChannelData(i);\n                const dspInput = node.dspInChannnels[i];\n                dspInput.set(input);\n            }\n            // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)\n            if (node.computeHandler) node.computeHandler(node.bufferSize);\n            if (node.voices) {\n                node.mixer.clearOutput(node.bufferSize, node.numOut, node.$outs); // First clear the outputs\n                for (let i = 0; i < node.voices; i++) { // Compute all running voices\n                    node.factory.compute(node.dspVoices$[i], node.bufferSize, node.$ins, node.$mixing); // Compute voice\n                    node.mixer.mixVoice(node.bufferSize, node.numOut, node.$mixing, node.$outs); // Mix it in result\n                }\n                if (node.effect) node.effect.compute(node.$effect, node.bufferSize, node.$outs, node.$outs); // Apply effect. Not a typo, effect is applied on the outs.\n            } else {\n                node.factory.compute(node.$dsp, node.bufferSize, node.$ins, node.$outs); // Compute\n            }\n            node.updateOutputs(); // Update bargraph\n            const outputs = new Array(node.numOut).fill(null).map(() => new Float32Array(node.bufferSize));\n            for (let i = 0; i < node.numOut; i++) { // Write outputs\n                const output = e.outputBuffer.getChannelData(i);\n                const dspOutput = node.dspOutChannnels[i];\n                output.set(dspOutput);\n                outputs[i].set(dspOutput);\n            }\n            if (node.plotHandler) node.plotHandler(outputs, node.$buffer++, node.cachedEvents.length ? node.cachedEvents : undefined);\n            node.cachedEvents = [];\n            return true;\n        };\n        node.setup = () => { // Setup web audio context\n            this.faust.log(\"buffer_size \" + node.bufferSize);\n            node.onaudioprocess = node.compute;\n            if (node.numIn > 0) {\n                node.$ins = node.$$audioHeapInputs;\n                for (let i = 0; i < node.numIn; i++) {\n                    node.HEAP32[(node.$ins >> 2) + i] = node.$audioHeapInputs + node.bufferSize * node.sampleSize * i;\n                }\n                // Prepare Ins buffer tables\n                const dspInChans = node.HEAP32.subarray(node.$ins >> 2, (node.$ins + node.numIn * node.ptrSize) >> 2);\n                for (let i = 0; i < node.numIn; i++) {\n                    node.dspInChannnels[i] = node.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + node.bufferSize * node.sampleSize) >> 2);\n                }\n            }\n            if (node.numOut > 0) {\n                node.$outs = node.$$audioHeapOutputs;\n                if (node.voices) node.$mixing = node.$$audioHeapMixing;\n                for (let i = 0; i < node.numOut; i++) {\n                    node.HEAP32[(node.$outs >> 2) + i] = node.$audioHeapOutputs + node.bufferSize * node.sampleSize * i;\n                    if (node.voices) node.HEAP32[(node.$mixing >> 2) + i] = node.$audioHeapMixing + node.bufferSize * node.sampleSize * i;\n                }\n                // Prepare Out buffer tables\n                const dspOutChans = node.HEAP32.subarray(node.$outs >> 2, (node.$outs + node.numOut * node.ptrSize) >> 2);\n                for (let i = 0; i < node.numOut; i++) {\n                    node.dspOutChannnels[i] = node.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + node.bufferSize * node.sampleSize) >> 2);\n                }\n            }\n            // Parse JSON UI part\n            node.parseUI(node.dspMeta.ui);\n            if (node.effect) node.parseUI(node.effectMeta.ui);\n\n            // keep 'keyOn/keyOff' labels\n            if (node.voices) {\n                node.inputsItems.forEach((item) => {\n                    if (item.endsWith(\"/gate\")) node.fGateLabel$.push(node.pathTable$[item]);\n                    else if (item.endsWith(\"/freq\")) node.fFreqLabel$.push(node.pathTable$[item]);\n                    else if (item.endsWith(\"/gain\")) node.fGainLabel$.push(node.pathTable$[item]);\n                });\n                // Init DSP voices\n                node.dspVoices$.forEach($voice => node.factory.init($voice, audioCtx.sampleRate));\n                // Init effect\n                if (node.effect) node.effect.init(node.$effect, audioCtx.sampleRate);\n            } else {\n                // Init DSP\n                node.factory.init(node.$dsp, audioCtx.sampleRate);\n            }\n        };\n        node.getSampleRate = () => audioCtx.sampleRate;\n        node.getNumInputs = () => node.numIn;\n        node.getNumOutputs = () => node.numOut;\n        node.init = (sampleRate) => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.init($voice, sampleRate));\n            else node.factory.init(node.$dsp, sampleRate);\n        };\n        node.instanceInit = (sampleRate) => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.instanceInit($voice, sampleRate));\n            else node.factory.instanceInit(node.$dsp, sampleRate);\n        };\n        node.instanceConstants = (sampleRate) => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.instanceConstants($voice, sampleRate));\n            else node.factory.instanceConstants(node.$dsp, sampleRate);\n        };\n        node.instanceResetUserInterface = () => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.instanceResetUserInterface($voice));\n            else node.factory.instanceResetUserInterface(node.$dsp);\n        };\n        node.instanceClear = () => {\n            if (node.voices) node.dspVoices$.forEach($voice => node.factory.instanceClear($voice));\n            else node.factory.instanceClear(node.$dsp);\n        };\n        node.metadata = handler => (node.dspMeta.meta ? node.dspMeta.meta.forEach(meta => handler.declare(Object.keys(meta)[0], meta[Object.keys(meta)[0]])) : undefined);\n        node.setOutputParamHandler = handler => node.outputHandler = handler;\n        node.getOutputParamHandler = () => node.outputHandler;\n        node.setComputeHandler = handler => node.computeHandler = handler;\n        node.getComputeHandler = () => node.computeHandler;\n        const findPath = (o: any, p: string) => {\n            if (typeof o !== \"object\") return false;\n            if (o.address) {\n                if (o.address === p) return true;\n                return false;\n            }\n            for (const k in o) {\n                if (findPath(o[k], p)) return true;\n            }\n            return false;\n        };\n        node.setParamValue = (path, value) => {\n            node.cachedEvents.push({ type: \"param\", data: { path, value } });\n            if (node.voices) {\n                if (node.effect && findPath(node.effectMeta.ui, path)) node.effect.setParamValue(node.$effect, node.pathTable$[path], value);\n                else node.dspVoices$.forEach($voice => node.factory.setParamValue($voice, node.pathTable$[path], value));\n            } else {\n                node.factory.setParamValue(node.$dsp, node.pathTable$[path], value);\n            }\n        };\n        node.getParamValue = (path) => {\n            if (node.voices) {\n                if (node.effect && findPath(node.effectMeta.ui, path)) return node.effect.getParamValue(node.$effect, node.pathTable$[path]);\n                return node.factory.getParamValue(node.dspVoices$[0], node.pathTable$[path]);\n            }\n            return node.factory.getParamValue(node.$dsp, node.pathTable$[path]);\n        };\n        node.getParams = () => node.inputsItems;\n        node.getJSON = () => {\n            if (node.voices) {\n                const o = node.dspMeta;\n                const e = node.effectMeta;\n                const r = { ...o };\n                if (e) {\n                    r.ui = [{ type: \"tgroup\", label: \"Sequencer\", items: [\n                        { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                        { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                    ] }];\n                } else {\n                    r.ui = [{ type: \"tgroup\", label: \"Polyphonic\", items: [\n                        { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                    ] }];\n                }\n                return JSON.stringify(r);\n            }\n            return JSON.stringify(node.dspMeta);\n        };\n        node.getUI = () => {\n            if (node.voices) {\n                const o = node.dspMeta;\n                const e = node.effectMeta;\n                if (e) {\n                    return [{ type: \"tgroup\", label: \"Sequencer\", items: [\n                        { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                        { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                    ] }];\n                }\n                return [{ type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ] }];\n            }\n            return node.dspMeta.ui;\n        };\n        node.destroy = () => {\n            node.destroyed = true;\n            delete node.outputHandler;\n            delete node.computeHandler;\n            delete node.plotHandler;\n        };\n        // Init resulting DSP\n        node.setup();\n        return node;\n    }\n    /**\n     * Create a ScriptProcessorNode Web Audio object\n     * by loading and compiling the Faust wasm file\n     *\n     * @param {TAudioNodeOptions} optionsIn\n     * @returns {Promise<FaustScriptProcessorNode>} a Promise for valid WebAudio ScriptProcessorNode object or null\n     */\n    async getNode(optionsIn: TAudioNodeOptions): Promise<FaustScriptProcessorNode> {\n        const { compiledDsp, audioCtx, bufferSize: bufferSizeIn, voices, plotHandler } = optionsIn;\n        const bufferSize = bufferSizeIn || 512;\n        let node: FaustScriptProcessorNode;\n        try {\n            let effectInstance: WebAssembly.Instance;\n            let mixerInstance: WebAssembly.Instance;\n            const memory = createWasmMemory(voices, compiledDsp.dspMeta, compiledDsp.effectMeta, bufferSize);\n            const importObject = createWasmImport(voices, memory);\n            if (voices) {\n                const mixerObject = { imports: { print: console.log }, memory: { memory } }; // eslint-disable-line no-console\n                mixerInstance = new WebAssembly.Instance(mixer32Module, mixerObject);\n                try {\n                    effectInstance = await WebAssembly.instantiate(compiledDsp.effectModule, importObject);\n                } catch (e) {} // eslint-disable-line no-empty\n            }\n            const dspInstance = await WebAssembly.instantiate(compiledDsp.dspModule, importObject);\n            node = this.initNode(compiledDsp, dspInstance, effectInstance, mixerInstance, audioCtx, bufferSize, memory, voices, plotHandler);\n        } catch (e) {\n            this.faust.error(\"Faust \" + compiledDsp.shaKey + \" cannot be loaded or compiled\");\n            throw e;\n        }\n        return node;\n    }\n}\n","export { Faust } from \"./Faust\";\nexport { FaustAudioWorkletNode } from \"./FaustAudioWorkletNode\";\n","/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable object-property-newline */\nimport { TDspMeta, TFaustCompileArgs } from \"./types\";\nimport mixer32DataURI from \"./wasm/mixer32.wasm\";\n\nexport const ab2str = (buf: ArrayBuffer): string => (buf ? String.fromCharCode.apply(null, new Uint8Array(buf)) : null);\nexport const str2ab = (str: string): ArrayBuffer => {\n    if (!str) return null;\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n};\nexport const atoUint6 = (nChr: number) => { // eslint-disable-line arrow-body-style\n    return nChr > 64 && nChr < 91\n        ? nChr - 65\n        : nChr > 96 && nChr < 123\n            ? nChr - 71\n            : nChr > 47 && nChr < 58\n                ? nChr + 4\n                : nChr === 43\n                    ? 62\n                    : nChr === 47\n                        ? 63\n                        : 0;\n};\nexport const atoab = (sBase64: string, nBlocksSize?: number) => {\n    if (typeof window.atob === \"function\") return str2ab(atob(sBase64));\n    const sB64Enc = sBase64.replace(/[^A-Za-z0-9+/]/g, \"\");\n    const nInLen = sB64Enc.length;\n    const nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2;\n    const taBytes = new Uint8Array(nOutLen);\n    for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n        nMod4 = nInIdx & 3;\n        nUint24 |= atoUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n        if (nMod4 === 3 || nInLen - nInIdx === 1) {\n            for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n            }\n            nUint24 = 0;\n        }\n    }\n    return taBytes.buffer;\n};\nexport const heap2Str = (buf: number[]) => {\n    let str = \"\";\n    let i = 0;\n    while (buf[i] !== 0) {\n        str += String.fromCharCode(buf[i++]);\n    }\n    return str;\n};\nexport const mixer32Module = new WebAssembly.Module(atoab(mixer32DataURI.split(\",\")[1]));\nexport const midiToFreq = (note: number) => 440.0 * 2 ** ((note - 69) / 12);\nexport const remap = (v: number, mn0: number, mx0: number, mn1: number, mx1: number) => (v - mn0) / (mx0 - mn0) * (mx1 - mn1) + mn1;\nexport const findPath = (o: any, p: string) => {\n    if (typeof o !== \"object\") return false;\n    if (o.address) {\n        return (o.address === p);\n    }\n    for (const k in o) {\n        if (findPath(o[k], p)) return true;\n    }\n    return false;\n};\nexport const findPathClosure = () => {\n    const findPath = (o: any, p: string) => {\n        if (typeof o !== \"object\") return false;\n        if (o.address) {\n            return (o.address === p);\n        }\n        for (const k in o) {\n            if (findPath(o[k], p)) return true;\n        }\n        return false;\n    };\n    return findPath;\n};\nexport const createWasmImport = (voices: number, memory: WebAssembly.Memory) => ({\n    env: {\n        memory: voices ? memory : undefined, memoryBase: 0, tableBase: 0,\n        _abs: Math.abs,\n        // Float version\n        _acosf: Math.acos, _asinf: Math.asin, _atanf: Math.atan, _atan2f: Math.atan2,\n        _ceilf: Math.ceil, _cosf: Math.cos, _expf: Math.exp, _floorf: Math.floor,\n        _fmodf: (x: number, y: number) => x % y,\n        _logf: Math.log, _log10f: Math.log10, _max_f: Math.max, _min_f: Math.min,\n        _remainderf: (x: number, y: number) => x - Math.round(x / y) * y,\n        _powf: Math.pow, _roundf: Math.fround, _sinf: Math.sin, _sqrtf: Math.sqrt, _tanf: Math.tan,\n        _acoshf: Math.acosh, _asinhf: Math.asinh, _atanhf: Math.atanh,\n        _coshf: Math.cosh, _sinhf: Math.sinh, _tanhf: Math.tanh,\n        // Double version\n        _acos: Math.acos, _asin: Math.asin, _atan: Math.atan, _atan2: Math.atan2,\n        _ceil: Math.ceil, _cos: Math.cos, _exp: Math.exp, _floor: Math.floor,\n        _fmod: (x: number, y: number) => x % y,\n        _log: Math.log, _log10: Math.log10, _max_: Math.max, _min_: Math.min,\n        _remainder: (x: number, y: number) => x - Math.round(x / y) * y,\n        _pow: Math.pow, _round: Math.fround, _sin: Math.sin, _sqrt: Math.sqrt, _tan: Math.tan,\n        _acosh: Math.acosh, _asinh: Math.asinh, _atanh: Math.atanh,\n        _cosh: Math.cosh, _sinh: Math.sinh, _tanh: Math.tanh,\n        table: new WebAssembly.Table({ initial: 0, element: \"anyfunc\" })\n    }\n});\nexport const createWasmMemory = (voicesIn: number, dspMeta: TDspMeta, effectMeta: TDspMeta, bufferSize: number) => {\n    // Hack : at least 4 voices (to avoid weird wasm memory bug?)\n    const voices = Math.max(4, voicesIn);\n    // Memory allocator\n    const ptrSize = 4;\n    const sampleSize = 4;\n    const pow2limit = (x: number) => {\n        let n = 65536; // Minimum = 64 kB\n        while (n < x) { n *= 2; }\n        return n;\n    };\n    const effectSize = effectMeta ? effectMeta.size : 0;\n    let memorySize = pow2limit(\n        effectSize\n        + dspMeta.size * voices\n        + (dspMeta.inputs + dspMeta.outputs * 2)\n        * (ptrSize + bufferSize * sampleSize)\n    ) / 65536;\n    memorySize = Math.max(2, memorySize); // As least 2\n    return new WebAssembly.Memory({ initial: memorySize, maximum: memorySize });\n};\n\nexport const args2String = (args: TFaustCompileArgs) => {\n    let argStr = \"\";\n    for (const key in args) {\n        const arg = args[key];\n        if (Array.isArray(arg)) arg.forEach((s: string) => argStr += key + \" \" + s + \" \");\n        else argStr += key + \" \" + arg + \" \";\n    }\n    return argStr;\n};\n\nexport const argsTbl2String = (args: string[]) => {\n    let argStr = \"\";\n    args.forEach( (item) => { argStr += item + \" \"} );\n    return argStr;\n};\n\nexport const toArgv = (args: TFaustCompileArgs) => {\n    const argv: string[] = [];\n    for (const key in args) {\n        const arg = args[key];\n        if (Array.isArray(arg)) arg.forEach((s: string) => argv.push(key, s));\n        else if (typeof arg === \"number\") argv.push(key, arg.toString());\n        else argv.push(key, arg);\n    }\n    return argv;\n};\n","export default \"data:application/wasm;base64,AGFzbQEAAAABj4CAgAACYAN/f38AYAR/f39/AX0CkoCAgAABBm1lbW9yeQZtZW1vcnkCAAIDg4CAgAACAAEHmoCAgAACC2NsZWFyT3V0cHV0AAAIbWl4Vm9pY2UAAQqKgoCAAALigICAAAEDfwJAQQAhBQNAAkAgAiAFQQJ0aigCACEDQQAhBANAAkAgAyAEQQJ0akMAAAAAOAIAIARBAWohBCAEIABIBEAMAgUMAQsACwsgBUEBaiEFIAUgAUgEQAwCBQwBCwALCwsLnYGAgAACBH8DfQJ9QQAhB0MAAAAAIQgDQAJAQQAhBiACIAdBAnRqKAIAIQQgAyAHQQJ0aigCACEFA0ACQCAEIAZBAnRqKgIAIQkgCCAJi5chCCAFIAZBAnRqKgIAIQogBSAGQQJ0aiAKIAmSOAIAIAZBAWohBiAGIABIBEAMAgUMAQsACwsgB0EBaiEHIAcgAUgEQAwCBQwBCwALCyAIDwsL\""],"sourceRoot":""}